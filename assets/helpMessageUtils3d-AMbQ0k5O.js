import{gi as l,hx as $,d7 as M,dw as P,hy as T,cS as b}from"./index-BhDz4nJ7.js";function k(e,s){const a=e==null?void 0:e.geometry;if(!e||(a==null?void 0:a.type)!=="mesh"||!s)return;const{renderCoordsHelper:h,elevationProvider:x}=s,{camera:m}=s.state,{extent:t}=a,{center:d,spatialReference:r}=t,w=l(r),n=$(r),y=l(h.spatialReference),z=t.width*w,v=t.height*n,p=(t.zmax??0)*n,u=p-(t.zmin??0)*n,C=Math.max(z,v,u)/y,{x:i,y:c}=d,g=d.z??0;M(o,i,c,g),h.toRenderCoords(o,r,o);const f=C/m.computeScreenPixelSizeAt(o);if(f>m.width*H)return"meshTooClose";if(f<A)return"meshTooFar";const R=P(e),{absoluteZ:S}=T(i,c,p,r,s,R);return S<(x.getElevation(i,c,g,r,"ground")??0)*n+u*U?"meshUnderground":"mesh"}const A=20,H=1,U=.1,o=b();export{k as getDrawMeshHelpMessage};
