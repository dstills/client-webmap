import{cl as g,dw as d,E as t,F as r,J as f,a3 as b,a$ as m,M as c,bt as p,P as y}from"./index-BS4ejk0L.js";import T from"./GraphicsLayer-BXYC2K90.js";import{m as _}from"./LayerView2D-CZ8nbB8V.js";import{t as v}from"./GraphicContainer-DhXOZIIu.js";import{$ as O}from"./GraphicsView2D-jvkl5iFE.js";import{u as C}from"./LayerView-BXe9D6EI.js";import"./Container-BVXBuXAH.js";import"./highlightReasons-D5OcZ3Uo.js";import"./ClipRect-5GyAajNG.js";import"./AGraphicContainer-BdYsKG3e.js";import"./TechniqueInstance-PIPPrh7n.js";import"./UpdateTracking2D-Cr_f_J8q.js";import"./TurboLine-CKM3LkF4.js";import"./LabelMetric-BKZCQ8cF.js";import"./constants-D5zmR9t2.js";import"./TileContainer-BpP_2Ty4.js";import"./WGLContainer-C4l17G9o.js";import"./WGLBrushVTLSymbol-CziVJPFr.js";import"./vec4f32-CjrfB-0a.js";import"./ShaderCompiler-G2XYGDs6.js";import"./ProgramTemplate-Cl1CwPK_.js";import"./FeatureCommandQueue-D3emV7DO.js";import"./heatmapTextureUtils-DW_fXosT.js";import"./AttributeStore-KULj_VBV.js";import"./TimeOnly-Bteh-FKU.js";import"./centroid-DdLmOD72.js";import"./timeSupport-CUSS_Biu.js";import"./json-Wa8cmqdu.js";import"./normalizeUtilsSync-D-dagKC2.js";let o=class extends g(d){constructor(e){super(e),this.frameCenter=null,this.frameOutline=null,this.lineOfSight=null,this.sensorLocation=null,this.sensorTrail=null}};t([r({type:Boolean})],o.prototype,"frameCenter",void 0),t([r({type:Boolean})],o.prototype,"frameOutline",void 0),t([r({type:Boolean})],o.prototype,"lineOfSight",void 0),t([r({type:Boolean})],o.prototype,"sensorLocation",void 0),t([r({type:Boolean})],o.prototype,"sensorTrail",void 0),o=t([f("esri.layers.support.TelemetryDisplay")],o);const u=o,h=new b([255,127,0]);let n=class extends _(C){constructor(){super(...arguments),this._graphicsLayer=new T,this._frameOutlineGraphic=new m({symbol:{type:"simple-fill",outline:{type:"simple-line",color:h}}}),this._sensorTrailGraphic=new m({symbol:{type:"simple-line",color:h}}),this._lineOfSightGraphic=new m({symbol:{type:"simple-line",color:h}}),this._sensorLocationGraphic=new m({symbol:{type:"simple-marker",color:h}}),this._frameCenterGraphic=new m({symbol:{type:"simple-marker",color:h}}),this.layer=null,this.symbolColor=h,this.visibleTelemetryElements=null}destroy(){this._graphicsLayer=c(this._graphicsLayer)}initialize(){var e,i,s,l,a;this.addHandles(p(()=>this.symbolColor,()=>{this._frameOutlineGraphic.symbol.outline.color=this.symbolColor,this._sensorTrailGraphic.symbol.color=this.symbolColor,this._lineOfSightGraphic.symbol.color=this.symbolColor,this._sensorLocationGraphic.symbol.color=this.symbolColor,this._frameCenterGraphic.symbol.color=this.symbolColor},y)),this._graphicsLayer.graphics.addMany([this._frameOutlineGraphic,this._sensorTrailGraphic,this._lineOfSightGraphic,this._sensorLocationGraphic,this._frameCenterGraphic]),this.visibleTelemetryElements=new u({frameCenter:((e=this.layer.telemetryDisplay)==null?void 0:e.frameCenter)??!0,frameOutline:((i=this.layer.telemetryDisplay)==null?void 0:i.frameOutline)??!0,lineOfSight:((s=this.layer.telemetryDisplay)==null?void 0:s.lineOfSight)??!0,sensorLocation:((l=this.layer.telemetryDisplay)==null?void 0:l.sensorLocation)??!0,sensorTrail:((a=this.layer.telemetryDisplay)==null?void 0:a.sensorTrail)??!0})}attach(){this.graphicsView=new O({requestUpdateCallback:()=>this.requestUpdate(),view:this.view,graphics:this._graphicsLayer.graphics,container:new v(this.view.featuresTilingScheme)}),this.container.addChild(this.graphicsView.container),this.addAttachHandles(this._graphicsLayer.on("graphic-update",this.graphicsView.graphicUpdateHandler)),this.addAttachHandles([p(()=>{var e,i,s,l,a;return[(e=this.layer.telemetryDisplay)==null?void 0:e.frameCenter,(i=this.layer.telemetryDisplay)==null?void 0:i.frameOutline,(s=this.layer.telemetryDisplay)==null?void 0:s.sensorLocation,(l=this.layer.telemetryDisplay)==null?void 0:l.sensorTrail,(a=this.layer.telemetryDisplay)==null?void 0:a.lineOfSight]},()=>this._updateVisibleTelemetryElements(),y),p(()=>{var e,i,s,l,a;return[this.layer.telemetry,(e=this.visibleTelemetryElements)==null?void 0:e.frameCenter,(i=this.visibleTelemetryElements)==null?void 0:i.frameOutline,(s=this.visibleTelemetryElements)==null?void 0:s.sensorLocation,(l=this.visibleTelemetryElements)==null?void 0:l.sensorTrail,(a=this.visibleTelemetryElements)==null?void 0:a.lineOfSight]},()=>this._updateGraphicGeometries(),y)])}detach(){this.container.removeAllChildren(),this.graphicsView=c(this.graphicsView)}supportsSpatialReference(e){return!0}moveStart(){}moveEnd(){}viewChange(){this.graphicsView.viewChange()}update(e){this.graphicsView.processUpdate(e)}isUpdating(){return!this.graphicsView||this.graphicsView.updating}_updateVisibleTelemetryElements(){this.visibleTelemetryElements&&this.layer.telemetryDisplay&&(this.visibleTelemetryElements.frameCenter=this.layer.telemetryDisplay.frameCenter,this.visibleTelemetryElements.frameOutline=this.layer.telemetryDisplay.frameOutline,this.visibleTelemetryElements.lineOfSight=this.layer.telemetryDisplay.lineOfSight,this.visibleTelemetryElements.sensorLocation=this.layer.telemetryDisplay.sensorLocation,this.visibleTelemetryElements.sensorTrail=this.layer.telemetryDisplay.sensorTrail)}_updateGraphicGeometries(){const{telemetry:e}=this.layer,{visibleTelemetryElements:i}=this;e&&i&&(i.frameOutline&&e.frameOutline?this._frameOutlineGraphic.geometry=this.layer.telemetry.frameOutline:this._frameOutlineGraphic.geometry=null,i.sensorTrail&&e.sensorTrail?this._sensorTrailGraphic.geometry=this.layer.telemetry.sensorTrail:this._sensorTrailGraphic.geometry=null,i.lineOfSight&&e.lineOfSight?this._lineOfSightGraphic.geometry=this.layer.telemetry.lineOfSight:this._lineOfSightGraphic.geometry=null,i.sensorLocation&&e.sensorLocation?this._sensorLocationGraphic.geometry=this.layer.telemetry.sensorLocation:this._sensorLocationGraphic.geometry=null,i.frameCenter&&e.frameCenter?this._frameCenterGraphic.geometry=this.layer.telemetry.frameCenter:this._frameCenterGraphic.geometry=null)}};t([r()],n.prototype,"graphicsView",void 0),t([r()],n.prototype,"layer",void 0),t([r()],n.prototype,"symbolColor",void 0),t([r({type:u})],n.prototype,"visibleTelemetryElements",void 0),n=t([f("esri.views.2d.layers.VideoLayerView2D")],n);const Z=n;export{Z as default};
