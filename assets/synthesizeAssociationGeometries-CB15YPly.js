import{g as r,y as a,i as u,eM as y,c1 as d,hs as h,hr as l,bE as x}from"./index-BhDz4nJ7.js";import{d as G}from"./Association--8rr5o_q.js";import"./UtilityNetwork-2SDC2bhE.js";let i=class extends y{constructor(o){super(o),this.maxGeometryCountExceeded=!1,this.associations=[]}};r([a({type:Boolean,json:{write:!0}})],i.prototype,"maxGeometryCountExceeded",void 0),r([a({type:[G],json:{write:!0}})],i.prototype,"associations",void 0),i=r([u("esri.rest.networks.support.AssociationGeometriesResult")],i);const $=i;async function R(o,s,e){const t=d(o),n={...s.toJSON(),f:"json"},c=h({...t.query,...n});e?e.method="post":e={method:"post"};const p=l(c,e),m=`${t.path}/synthesizeAssociationGeometries`;return x(m,p).then(f=>j(f,s.outSpatialReference))}function j(o,s){const{data:e}=o,t=$.fromJSON(e);if(s)for(const n of t.associations)n.geometry.spatialReference=s.clone();return t}export{R as synthesizeAssociationGeometries};
