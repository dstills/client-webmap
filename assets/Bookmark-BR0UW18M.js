import{k as y,eM as h,kc as c,aK as m,kd as w,D as g,aH as v,g as n,y as a,gV as d,bL as b,h6 as x,eN as k,i as f}from"./index-BhDz4nJ7.js";import{u as p}from"./SlideThumbnail-DNRJuONt.js";var l;let e=l=class extends y(h){constructor(t){super(t),this.name=null,this.thumbnail=new p,this.timeExtent=null}castThumbnail(t){return typeof t=="string"?new p({url:t}):c(p,t)}set viewpoint(t){const{targetGeometry:o,scale:r}=t;o!=null&&o.type==="point"&&r==null&&m.getLogger(this).warn("Bookmark.viewpoint should include 'scale' when its targetGeometry is a point.",t),this._set("viewpoint",t)}readViewpoint(t,o){const{extent:r,viewpoint:i}=o;return w.fromJSON(i||{targetGeometry:r})}writeViewpoint(t,o,r,i){if(!t)return;const{targetGeometry:s}=t;if(s==null||s.type==="extent")s!=null&&(o.extent=s.toJSON()),o[r]=t.toJSON();else{const u="Bookmark.viewpoint cannot be written to JSON when the viewpoint's targetGeometry is not an extent.";i!=null&&i.messages?i.messages.push(new g("property:unsupported",u)):m.getLogger(this).error(u)}}clone(){return new l(v({name:this.name,thumbnail:this.thumbnail,timeExtent:this.timeExtent,viewpoint:this.viewpoint}))}};n([a({type:String,nonNullable:!0,json:{write:{isRequired:!0}}})],e.prototype,"name",void 0),n([a({type:p,json:{write:{overridePolicy:t=>({enabled:!(!t||!t.url)})}}})],e.prototype,"thumbnail",void 0),n([d("thumbnail")],e.prototype,"castThumbnail",null),n([a({type:b,json:{write:!0}})],e.prototype,"timeExtent",void 0),n([a({type:w,nonNullable:!0,json:{write:!0}})],e.prototype,"viewpoint",null),n([x("viewpoint",["extent","viewpoint"])],e.prototype,"readViewpoint",null),n([k("viewpoint")],e.prototype,"writeViewpoint",null),e=l=n([f("esri.webmap.Bookmark")],e);const G=e;export{G as f};
