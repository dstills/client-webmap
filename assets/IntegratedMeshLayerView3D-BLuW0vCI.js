import{aj as m,ek as n,P as p,b0 as l,E as i,F as e,dG as d,J as c}from"./index-HSyhVbHY.js";import{S as u}from"./I3SMeshView3D-DPVkT0p5.js";import{n as h}from"./LayerView3D-DTnwkqtn.js";import{u as g}from"./LayerView-D_2WUzSy.js";import"./LayerElevationProvider-GokW3cXL.js";import"./RenderTexture-CfQ4ZjXD.js";import"./I3SOverrides-O780dHNs.js";import"./I3SNode-D-5eOdFu.js";import"./I3SUtil-BA4YcFcj.js";import"./I3SBinaryReader-BjOO2cKJ.js";import"./ReactiveSet-Ckf_608s.js";import"./meshFeatureSet-CPSL1dxC.js";import"./Mesh-CgKaXYXy.js";import"./External-CjMh3y2Y.js";import"./infoFor3D-CxOdoily.js";import"./FeatureLayerView3D-iYlU5kiT.js";import"./FeatureLayerViewBase3D-m6XLmLOB.js";import"./HeatmapDensity.glsl-BERHu6LC.js";import"./dehydratedFeatureComparison-4_8Rlmbh.js";import"./queryForSymbologySnapping-BQ8v3M8O.js";import"./hash-CcEbRgUF.js";import"./Graphics3DObjectStates-BK55UNzk.js";import"./optimizedFeatureQueryEngineAdapter-CrfC4vnQ.js";import"./centroid-DdLmOD72.js";import"./PooledRBush-C54Tre1t.js";import"./popupUtils-2vg8rKMo.js";import"./QueryEngine-AOGe-0WI.js";import"./WhereClause-CjcaLgJb.js";import"./TimeOnly-DLFwqMZ9.js";import"./timeSupport-qQlhJqvf.js";import"./json-Wa8cmqdu.js";import"./utils--5-TUsAi.js";import"./utils-DnBrjY4M.js";import"./ClassBreaksDefinition-CS1WKqxd.js";import"./FeatureStore-PVU7Y0oS.js";import"./BoundsStore-CXwZiuJG.js";import"./heatmapTextureUtils-STrnrcwY.js";import"./projectExtentUtils-Cj_v-lAk.js";import"./query-FEKkDKDw.js";import"./pbfQueryUtils-ZyitO5jF.js";import"./pbf-4nNmhWmO.js";import"./EventedSet-ChhsrTA5.js";import"./FeatureLayerView-CDD4WnTW.js";import"./RefreshableLayerView-nhECpckg.js";import"./SceneModification-BrgnxR8P.js";import"./persistable-CasXnzrV.js";import"./multiOriginJSONSupportUtils-C0wm8_Yw.js";import"./resourceExtension-CCptJQlT.js";import"./SceneLayerWorker-aBVs03TS.js";import"./makeScheduleFunction-CggzEh3c.js";const y=.2;let r=class extends u(h(g)){constructor(){super(...arguments),this.type="integrated-mesh-3d",this._elevationContext="im",this._isIntegratedMesh=!0,this._supportsLabeling=!1,this._needsNormals=m("enable-feature:im-shading"),this.drapeTargetType=n.WithoutRasterImage}get i3slayer(){return this.layer}get updatingProgressValue(){var t;return((t=this._controller)==null?void 0:t.updatingProgress)??0}get lodFactor(){var t,o,a,s;return((s=(a=(o=(t=this.view)==null?void 0:t.qualitySettings)==null?void 0:o.sceneService)==null?void 0:a.integratedMesh)==null?void 0:s.lodFactor)??1}get progressiveLoadFactor(){return this.lodFactor>=1?y:1}get layerPopupEnabledAndHasTemplate(){return!1}initialize(){this._updatingHandles.add(()=>this.layer.modifications,()=>this._loadModifications(),p),this.view.basemapTerrain.overlayManager.registerDrapeTarget(this)}destroy(){this.view.basemapTerrain.overlayManager.unregisterDrapeTarget(this)}_createLayerGraphic(){const t=new l;return t.layer=this.layer,t.sourceLayer=this.layer,t}canResume(){return super.canResume()&&(!this._controller||this._controller.rootNodeVisible)}_loadModifications(){if(this.removeHandles("modifications"),this.layer.modifications==null)return void(this._modifications=[]);const t=this.layer.modifications;this.addHandles(this._updatingHandles.addOnCollectionChange(()=>t,()=>this._modifications=t.toArray(),p),"modifications")}};i([e()],r.prototype,"layer",void 0),i([e()],r.prototype,"i3slayer",null),i([e(d)],r.prototype,"updatingProgress",void 0),i([e()],r.prototype,"updatingProgressValue",null),i([e()],r.prototype,"lodFactor",null),i([e({readOnly:!0})],r.prototype,"progressiveLoadFactor",null),r=i([c("esri.views.3d.layers.SceneLayerView3D")],r);const ut=r;export{ut as default};
