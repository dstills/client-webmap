import{E as o,F as n,qm as D,J as C,dw as Z,io as J,il as re,bh as Ce,aC as xe,dQ as Fe,du as R,bY as Ie,a$ as E,bZ as ne,aL as Ne,b5 as G,g as k,A as Re,b6 as Ae,bd as Je,nE as Ge,aB as ke,be as P,dn as je,dp as Ee,gS as Me,gT as qe,gU as Ue,cM as We,aP as ze,b_ as Ze,hg as me,ax as he,x5 as Ve,b as O,I as Qe,S as Ke,Q as Ye,k as He,bs as Xe,n6 as et,c_ as tt,dv as rt,hU as ot,d5 as st,cq as it,aT as nt,bx as at}from"./index-BS4ejk0L.js";import{i as lt}from"./originUtils-D69mHv66.js";import{u as Y,c as ut,d as Pe,f as pt,O as ct}from"./RouteParameters-BqoGCNu-.js";import{f as yt,n as dt,h as ft,O as q}from"./Stop-0OpqZV3K.js";import{a as mt}from"./GPMessage-DkFI3tgS.js";import{m as V,c as Q,O as U,f as W,j as z,g as H,a as ht}from"./RouteInfo-B01o4Atp.js";import"./multiOriginJSONSupportUtils-C0wm8_Yw.js";let F=class extends Z{constructor(t){super(t),this.break=new J({color:[255,255,255],size:12,outline:{color:[0,122,194],width:3}}),this.first=new J({color:[0,255,0],size:20,outline:{color:[255,255,255],width:4}}),this.unlocated=new J({color:[255,0,0],size:12,outline:{color:[255,255,255],width:3}}),this.last=new J({color:[255,0,0],size:20,outline:{color:[255,255,255],width:4}}),this.middle=new J({color:[51,51,51],size:12,outline:{color:[0,122,194],width:3}}),this.waypoint=new J({color:[255,255,255],size:12,outline:{color:[0,122,194],width:3}})}};o([n({types:D})],F.prototype,"break",void 0),o([n({types:D})],F.prototype,"first",void 0),o([n({types:D})],F.prototype,"unlocated",void 0),o([n({types:D})],F.prototype,"last",void 0),o([n({types:D})],F.prototype,"middle",void 0),o([n({types:D})],F.prototype,"waypoint",void 0),F=o([C("esri.layers.support.RouteStopSymbols")],F);const Te=F;let L=class extends Z{constructor(t){super(t),this.directionLines=new re({color:[0,122,194],width:6}),this.directionPoints=new J({color:[255,255,255],size:6,outline:{color:[0,122,194],width:2}}),this.pointBarriers=new J({style:"x",size:10,outline:{color:[255,0,0],width:3}}),this.polygonBarriers=new Ce({color:[255,170,0,.6],outline:{width:7.5,color:[255,0,0,.6]}}),this.polylineBarriers=new re({width:7.5,color:[255,85,0,.7]}),this.routeInfo=new re({width:8,color:[20,89,127]}),this.stops=new Te}};o([n({types:D})],L.prototype,"directionLines",void 0),o([n({types:D})],L.prototype,"directionPoints",void 0),o([n({types:D})],L.prototype,"pointBarriers",void 0),o([n({types:D})],L.prototype,"polygonBarriers",void 0),o([n({types:D})],L.prototype,"polylineBarriers",void 0),o([n({types:D})],L.prototype,"routeInfo",void 0),o([n({type:Te})],L.prototype,"stops",void 0),L=o([C("esri.layers.support.RouteSymbols")],L);const $e=L,we=new xe({0:"informative",1:"process-definition",2:"process-start",3:"process-stop",50:"warning",100:"error",101:"empty",200:"abort"});let te=class extends mt{constructor(t){super(t),this.type=null}};o([n({type:String,json:{read:we.read,write:we.write}})],te.prototype,"type",void 0),te=o([C("esri.rest.support.NAMessage")],te);const wt=te;let K=class extends Z{constructor(t){super(t)}};o([n({json:{read:{source:"string"}}})],K.prototype,"text",void 0),o([Fe(yt,{name:"stringType"})],K.prototype,"type",void 0),K=o([C("esri.rest.support.DirectionsString")],K);const De=K;let A=class extends Z{constructor(t){super(t),this.arriveTime=null,this.arriveTimeOffset=null,this.geometry=null,this.strings=null}readArriveTimeOffset(t,r){return dt(r.ETA,r.arriveTimeUTC)}readGeometry(t,r){return Ie.fromJSON(r.point)}};o([n({type:Date,json:{read:{source:"arriveTimeUTC"}}})],A.prototype,"arriveTime",void 0),o([n()],A.prototype,"arriveTimeOffset",void 0),o([R("arriveTimeOffset",["arriveTimeUTC","ETA"])],A.prototype,"readArriveTimeOffset",null),o([n({type:Ie})],A.prototype,"geometry",void 0),o([R("geometry",["point"])],A.prototype,"readGeometry",null),o([n({type:[De]})],A.prototype,"strings",void 0),A=o([C("esri.rest.support.DirectionsEvent")],A);const gt=A;function vt(e){if(e==null||e==="")return null;let t=0,r=0,i=0,l=0;const p=[];let u,c,w,v,a,S,I,B,f=0,g=0,d=0;if(a=e.match(/((\+|\-)[^\+\-\|]+|\|)/g),a||(a=[]),parseInt(a[f],32)===0){f=2;const s=parseInt(a[f],32);f++,S=parseInt(a[f],32),f++,1&s&&(g=a.indexOf("|")+1,I=parseInt(a[g],32),g++),2&s&&(d=a.indexOf("|",g)+1,B=parseInt(a[d],32),d++)}else S=parseInt(a[f],32),f++;for(;f<a.length&&a[f]!=="|";){u=parseInt(a[f],32)+t,f++,t=u,c=parseInt(a[f],32)+r,f++,r=c;const s=[u/S,c/S];g&&(v=parseInt(a[g],32)+i,g++,i=v,s.push(v/I)),d&&(w=parseInt(a[d],32)+l,d++,l=w,s.push(w/B)),p.push(s)}return{paths:[p],hasZ:g>0,hasM:d>0}}let M=class extends E{constructor(e){super(e),this.events=null,this.strings=null}readGeometry(e,t){const r=vt(t.compressedGeometry);return r!=null?ne.fromJSON(r):null}};o([n({type:[gt]})],M.prototype,"events",void 0),o([R("geometry",["compressedGeometry"])],M.prototype,"readGeometry",null),o([n({type:[De]})],M.prototype,"strings",void 0),M=o([C("esri.rest.support.DirectionsFeature")],M);const St=M;function bt(e,t){if(e.length===0)return new ne({spatialReference:t});const r=[];for(const u of e)for(const c of u.paths)r.push(...c);const i=[];r.forEach((u,c)=>{c!==0&&u[0]===r[c-1][0]&&u[1]===r[c-1][1]||i.push(u)});const{hasM:l,hasZ:p}=e[0];return new ne({hasM:l,hasZ:p,paths:[i],spatialReference:t})}let T=class extends G{constructor(t){super(t),this.extent=null,this.features=[],this.geometryType="polyline",this.routeId=null,this.routeName=null,this.totalDriveTime=null,this.totalLength=null,this.totalTime=null}readFeatures(t,r){if(!t)return[];const i=r.summary.envelope.spatialReference??r.spatialReference,l=i&&k.fromJSON(i);return t.map(p=>{const u=St.fromJSON(p);if(u.geometry!=null&&(u.geometry.spatialReference=l),u.events!=null)for(const c of u.events)c.geometry!=null&&(c.geometry.spatialReference=l);return u})}get mergedGeometry(){return this.features?bt(this.features.map(({geometry:t})=>t),this.extent.spatialReference):null}get strings(){return this.features.flatMap(({strings:t})=>t).filter(Re)}};o([n({type:Ne,json:{read:{source:"summary.envelope"}}})],T.prototype,"extent",void 0),o([n({nonNullable:!0})],T.prototype,"features",void 0),o([R("features")],T.prototype,"readFeatures",null),o([n()],T.prototype,"geometryType",void 0),o([n({readOnly:!0})],T.prototype,"mergedGeometry",null),o([n()],T.prototype,"routeId",void 0),o([n()],T.prototype,"routeName",void 0),o([n({value:null,readOnly:!0})],T.prototype,"strings",null),o([n({json:{read:{source:"summary.totalDriveTime"}}})],T.prototype,"totalDriveTime",void 0),o([n({json:{read:{source:"summary.totalLength"}}})],T.prototype,"totalLength",void 0),o([n({json:{read:{source:"summary.totalTime"}}})],T.prototype,"totalTime",void 0),T=o([C("esri.rest.support.DirectionsFeatureSet")],T);const Bt=T;let $=class extends Z{constructor(e){super(e),this.directionLines=null,this.directionPoints=null,this.directions=null,this.route=null,this.routeName=null,this.stops=null,this.traversedEdges=null,this.traversedJunctions=null,this.traversedTurns=null}};o([n({type:G,json:{write:!0}})],$.prototype,"directionLines",void 0),o([n({type:G,json:{write:!0}})],$.prototype,"directionPoints",void 0),o([n({type:Bt,json:{write:!0}})],$.prototype,"directions",void 0),o([n({type:E,json:{write:!0}})],$.prototype,"route",void 0),o([n({type:String,json:{write:!0}})],$.prototype,"routeName",void 0),o([n({type:[E],json:{write:!0}})],$.prototype,"stops",void 0),o([n({type:G,json:{write:!0}})],$.prototype,"traversedEdges",void 0),o([n({type:G,json:{write:!0}})],$.prototype,"traversedJunctions",void 0),o([n({type:G,json:{write:!0}})],$.prototype,"traversedTurns",void 0),$=o([C("esri.rest.support.RouteResult")],$);const It=$;function oe(e){return e?G.fromJSON(e).features.filter(Re):[]}let _=class extends Z{constructor(t){super(t),this.messages=null,this.pointBarriers=null,this.polylineBarriers=null,this.polygonBarriers=null,this.routeResults=null}readPointBarriers(t,r){return oe(r.barriers)}readPolylineBarriers(t){return oe(t)}readPolygonBarriers(t){return oe(t)}};o([n({type:[wt]})],_.prototype,"messages",void 0),o([n({type:[E]})],_.prototype,"pointBarriers",void 0),o([R("pointBarriers",["barriers"])],_.prototype,"readPointBarriers",null),o([n({type:[E]})],_.prototype,"polylineBarriers",void 0),o([R("polylineBarriers")],_.prototype,"readPolylineBarriers",null),o([n({type:[E]})],_.prototype,"polygonBarriers",void 0),o([R("polygonBarriers")],_.prototype,"readPolygonBarriers",null),o([n({type:[It]})],_.prototype,"routeResults",void 0),_=o([C("esri.rest.support.RouteSolveResult")],_);const Nt=_;function X(e){return e instanceof G}async function Rt(e,t,r){const i=[],l=[],p={},u={},c=Ae(e),{path:w}=c;X(t.stops)&&Y(t.stops.features,l,"stops.features",p),X(t.pointBarriers)&&Y(t.pointBarriers.features,l,"pointBarriers.features",p),X(t.polylineBarriers)&&Y(t.polylineBarriers.features,l,"polylineBarriers.features",p),X(t.polygonBarriers)&&Y(t.polygonBarriers.features,l,"polygonBarriers.features",p);const v=await Je(l);for(const B in p){const f=p[B];i.push(B),u[B]=v.slice(f[0],f[1])}if(ut(u,i)){let B=null;try{B=await Pe(w,t.apiKey,r)}catch{}B&&!B.hasZ&&pt(u,i)}for(const B in u)u[B].forEach((f,g)=>{Ge(t,B)[g].geometry=f});const a={...r,query:{...c.query,...ft(t),f:"json"}},S=w.endsWith("/solve")?w:`${w}/solve`,{data:I}=await ke(S,a);return Pt(I)}function Pt(e){const{barriers:t,directionLines:r,directionPoints:i,directions:l,messages:p,polygonBarriers:u,polylineBarriers:c,routes:w,stops:v,traversedEdges:a,traversedJunctions:S,traversedTurns:I}=e,B=s=>{const b=g.find(N=>N.routeName===s);if(b!=null)return b;const m={routeId:g.length+1,routeName:s};return g.push(m),m},f=s=>{const b=g.find(N=>N.routeId===s);if(b!=null)return b;const m={routeId:s,routeName:null};return g.push(m),m},g=[];w==null||w.features.forEach((s,b)=>{s.geometry.spatialReference=w.spatialReference??void 0;const m=s.attributes.Name,N=b+1;g.push({routeId:N,routeName:m,route:s})}),l==null||l.forEach(s=>{const{routeName:b}=s;B(b).directions=s});const d=((v==null?void 0:v.features.every(s=>s.attributes.RouteName==null))??!1)&&g.length>0?g[0].routeName:null;return v==null||v.features.forEach(s=>{var N;s.geometry&&((N=s.geometry).spatialReference??(N.spatialReference=v.spatialReference??void 0));const b=d??s.attributes.RouteName,m=B(b);m.stops??(m.stops=[]),m.stops.push(s)}),r==null||r.features.forEach(s=>{const b=s.attributes.RouteID,m=f(b),{geometryType:N,spatialReference:x}=r;m.directionLines??(m.directionLines={features:[],geometryType:N,spatialReference:x}),m.directionLines.features.push(s)}),i==null||i.features.forEach(s=>{const b=s.attributes.RouteID,m=f(b),{geometryType:N,spatialReference:x}=i;m.directionPoints??(m.directionPoints={features:[],geometryType:N,spatialReference:x}),m.directionPoints.features.push(s)}),a==null||a.features.forEach(s=>{const b=s.attributes.RouteID,m=f(b),{geometryType:N,spatialReference:x}=a;m.traversedEdges??(m.traversedEdges={features:[],geometryType:N,spatialReference:x}),m.traversedEdges.features.push(s)}),S==null||S.features.forEach(s=>{const b=s.attributes.RouteID,m=f(b),{geometryType:N,spatialReference:x}=S;m.traversedJunctions??(m.traversedJunctions={features:[],geometryType:N,spatialReference:x}),m.traversedJunctions.features.push(s)}),I==null||I.features.forEach(s=>{const b=s.attributes.RouteID,m=f(b);m.traversedTurns??(m.traversedTurns={features:[]}),m.traversedTurns.features.push(s)}),Nt.fromJSON({routeResults:g,barriers:t,polygonBarriers:u,polylineBarriers:c,messages:p})}function se(e){return e.length?e:null}function ae(e){switch(e){case"esriGeometryPoint":return{type:"esriSMS",style:"esriSMSCircle",size:12,color:[0,0,0,0],outline:ae("esriGeometryPolyline")};case"esriGeometryPolyline":return{type:"esriSLS",style:"esriSLSSolid",width:1,color:[0,0,0,0]};case"esriGeometryPolygon":return{type:"esriSFS",style:"esriSFSNull",outline:ae("esriGeometryPolyline")}}}function ee(e){return"layers"in e}function Tt(e){return e.declaredClass==="esri.rest.support.FeatureSet"}function $t(e){return e.declaredClass==="esri.rest.support.NetworkFeatureSet"}function Dt(e,t,r){var le,ue,pe,ce,ye,de;const i=(le=t.networkDataset)==null?void 0:le.networkAttributes,l=(i==null?void 0:i.filter(({usageType:y})=>y==="cost"))??[],p=r.travelMode??t.defaultTravelMode;if(p==null)return void Oe().warn("route-layer:missing-travel-mode","The routing service must have a default travel mode or one must be specified in the route parameter.");const{timeAttributeName:u,distanceAttributeName:c}=p,w=l.find(({name:y})=>y===u),v=l.find(({name:y})=>y===c),a=((ue=r.travelMode)==null?void 0:ue.impedanceAttributeName)??r.impedanceAttribute??t.impedance,S=w==null?void 0:w.units,I=v==null?void 0:v.units;if(!S||!I)throw new O("routelayer:unknown-impedance-units","the units of either the distance or time impedance are unknown");const B=r.directionsLanguage??t.directionsLanguage,f=r.accumulateAttributes??t.accumulateAttributeNames??[],g=new Set(l.filter(({name:y})=>y===u||y===c||y===a||y!=null&&f.includes(y)).map(({name:y})=>y)),d=y=>{for(const fe in y)g.has(fe)||delete y[fe]};for(const y of e.pointBarriers)y.costs!=null&&(y.addedCost=y.costs[a]??0,d(y.costs));for(const y of e.polygonBarriers)y.costs!=null&&(y.scaleFactor=y.costs[a]??1,d(y.costs));for(const y of e.polylineBarriers)y.costs!=null&&(y.scaleFactor=y.costs[a]??1,d(y.costs));const{routeInfo:s}=e,{findBestSequence:b,preserveFirstStop:m,preserveLastStop:N,startTimeIsUTC:x,timeWindowsAreUTC:Le}=r;s.analysisSettings=new ht({accumulateAttributes:f,directionsLanguage:B,findBestSequence:b,preserveFirstStop:m,preserveLastStop:N,startTimeIsUTC:x,timeWindowsAreUTC:Le,travelMode:p}),s.totalDuration=j(((pe=s.totalCosts)==null?void 0:pe[u])??0,S),s.totalDistance=ie(((ce=s.totalCosts)==null?void 0:ce[c])??0,I),s.totalLateDuration=j(((ye=s.totalViolations)==null?void 0:ye[u])??0,S),s.totalWaitDuration=j(((de=s.totalWait)==null?void 0:de[u])??0,S),s.totalCosts!=null&&d(s.totalCosts),s.totalViolations!=null&&d(s.totalViolations),s.totalWait!=null&&d(s.totalWait);for(const y of e.stops)y.serviceCosts!=null&&(y.serviceDuration=j(y.serviceCosts[u]??0,S),y.serviceDistance=ie(y.serviceCosts[c]??0,I),d(y.serviceCosts)),y.cumulativeCosts!=null&&(y.cumulativeDuration=j(y.cumulativeCosts[u]??0,S),y.cumulativeDistance=ie(y.cumulativeCosts[c]??0,I),d(y.cumulativeCosts)),y.violations!=null&&(y.lateDuration=j(y.violations[u]??0,S),d(y.violations)),y.wait!=null&&(y.waitDuration=j(y.wait[u]??0,S),d(y.wait))}async function ge(e){const t=k.WGS84;return await ot(e.spatialReference,t),st(e,t)}function j(e,t){switch(t){case"seconds":return e/60;case"hours":return 60*e;case"days":return 60*e*24;default:return e}}function ie(e,t){return t==="decimal-degrees"||t==="points"||t==="unknown"?e:it(e,t,"meters")}function _t(e){const{attributes:t,geometry:r,popupTemplate:i,symbol:l}=e.toGraphic().toJSON();return{attributes:t,geometry:r,popupInfo:i,symbol:l}}const Ot=P.ofType(V),Lt=P.ofType(Q),ve=P.ofType(U),Se=P.ofType(W),be=P.ofType(z),Be=P.ofType(q),_e="esri.layers.RouteLayer",Oe=()=>nt.getLogger(_e);let h=class extends je(Ee(Me(qe(Ue(at))))){constructor(e){super(e),this._cachedServiceDescription=null,this._featureCollection=null,this._type="Feature Collection",this.defaultSymbols=new $e,this.directionLines=null,this.directionPoints=null,this.featureCollectionType="route",this.legendEnabled=!1,this.maxScale=0,this.minScale=0,this.pointBarriers=new ve,this.polygonBarriers=new Se,this.polylineBarriers=new be,this.routeInfo=null,this.spatialReference=k.WGS84,this.stops=new Be,this.type="route";const t=()=>{this._setStopSymbol(this.stops)};this.addHandles(We(()=>this.stops,"change",t,{sync:!0,onListenerAdd:t}))}writeFeatureCollectionWebmap(e,t,r,i){const l=[this._writePolygonBarriers(),this._writePolylineBarriers(),this._writePointBarriers(),this._writeRouteInfo(),this._writeDirectionLines(),this._writeDirectionPoints(),this._writeStops()].filter(c=>!!c),p=l.map((c,w)=>w),u=i.origin==="web-map"?"featureCollection.layers":"layers";ze(u,l,t),t.opacity=this.opacity,t.visibility=this.visible,t.visibleLayers=p}readDirectionLines(e,t){return this._getNetworkFeatures(t,"DirectionLines",r=>V.fromGraphic(r))}readDirectionPoints(e,t){return this._getNetworkFeatures(t,"DirectionPoints",r=>Q.fromGraphic(r))}get fullExtent(){var l;const e=new Ne({xmin:-180,ymin:-90,xmax:180,ymax:90,spatialReference:k.WGS84});if(((l=this.routeInfo)==null?void 0:l.geometry)!=null)return this.routeInfo.geometry.extent??e;if(this.stops==null)return e;const t=this.stops.filter(p=>p.geometry!=null);if(t.length<2)return e;const{spatialReference:r}=t.at(0).geometry;if(r==null)return e;const i=t.toArray().map(p=>{const u=p.geometry;return[u.x,u.y]});return new Ze({points:i,spatialReference:r}).extent}readMaxScale(e,t){var l;const r=ee(t)?t.layers:(l=t.featureCollection)==null?void 0:l.layers,i=r==null?void 0:r.find(p=>p.layerDefinition.maxScale!=null);return(i==null?void 0:i.layerDefinition.maxScale)??0}readMinScale(e,t){var l;const r=ee(t)?t.layers:(l=t.featureCollection)==null?void 0:l.layers,i=r==null?void 0:r.find(p=>p.layerDefinition.minScale!=null);return(i==null?void 0:i.layerDefinition.minScale)??0}readPointBarriers(e,t){return this._getNetworkFeatures(t,"Barriers",r=>U.fromGraphic(r))}readPolygonBarriers(e,t){return this._getNetworkFeatures(t,"PolygonBarriers",r=>W.fromGraphic(r))}readPolylineBarriers(e,t){return this._getNetworkFeatures(t,"PolylineBarriers",r=>z.fromGraphic(r))}readRouteInfo(e,t){const r=this._getNetworkFeatures(t,"RouteInfo",i=>H.fromGraphic(i));return r.length>0?r.at(0):null}readSpatialReference(e,t){var c,w;const r=ee(t)?t.layers:(c=t.featureCollection)==null?void 0:c.layers;if(!(r!=null&&r.length))return k.WGS84;const{layerDefinition:i,featureSet:l}=r[0],p=l.features[0],u=((w=p==null?void 0:p.geometry)==null?void 0:w.spatialReference)??l.spatialReference??i.spatialReference??i.extent.spatialReference??me;return k.fromJSON(u)}readStops(e,t){return this._getNetworkFeatures(t,"Stops",r=>q.fromGraphic(r),r=>this._setStopSymbol(r))}get title(){var e;return((e=this.routeInfo)==null?void 0:e.name)!=null?this.routeInfo.name:"Route"}set title(e){this._overrideIfSome("title",e)}get url(){return he.routeServiceUrl}set url(e){e!=null?this._set("url",Ve(e,Oe())):this._set("url",he.routeServiceUrl)}load(e){return this.addResolvingPromise(this.loadFromPortal({supportedTypes:["Feature Collection"]},e)),Promise.resolve(this)}removeAll(){this.removeResult(),this.pointBarriers.removeAll(),this.polygonBarriers.removeAll(),this.polylineBarriers.removeAll(),this.stops.removeAll()}removeResult(){this.directionLines!=null&&(this.directionLines.removeAll(),this._set("directionLines",null)),this.directionPoints!=null&&(this.directionPoints.removeAll(),this._set("directionPoints",null)),this.routeInfo!=null&&this._set("routeInfo",null)}async save(){await this.load();const{fullExtent:e,portalItem:t}=this;if(!t)throw new O("routelayer:portal-item-not-set","save() requires to the layer to have a portal item");if(!t.id)throw new O("routelayer:portal-item-not-saved","Please use saveAs() first to save the routelayer");if(t.type!=="Feature Collection")throw new O("routelayer:portal-item-wrong-type",'Portal item needs to have type "Feature Collection"');if(this.routeInfo==null)throw new O("routelayer:route-unsolved","save() requires a solved route");const{portal:r}=t;await r.signIn(),r.user||await t.reload();const{itemUrl:i,itemControl:l}=t;if(l!=="admin"&&l!=="update")throw new O("routelayer:insufficient-permissions","To save this layer, you need to be the owner or an administrator of your organization");const p={messages:[],origin:"portal-item",portal:r,url:i?Qe(i):void 0,writtenProperties:[]},u=this.write(void 0,p);return t.extent=await ge(e),t.title=this.title,await t.update({data:u}),t}async saveAs(e,t={}){var c;if(await this.load(),this.routeInfo==null)throw new O("routelayer:route-unsolved","saveAs() requires a solved route");const r=Ke.from(e).clone();r.extent??(r.extent=await ge(this.fullExtent)),r.id=null,r.portal??(r.portal=Ye.getDefault()),r.title??(r.title=this.title),r.type="Feature Collection",r.typeKeywords=["Data","Feature Collection",He.MULTI_LAYER,"Route Layer"];const{portal:i}=r,l={messages:[],origin:"portal-item",portal:i,url:null,writtenProperties:[]};await i.signIn();const p=t==null?void 0:t.folder,u=this.write(void 0,l);return await((c=i.user)==null?void 0:c.addItem({item:r,folder:p,data:u})),this.portalItem=r,lt(l),l.portalItem=r,r}async solve(e,t){const r=(e==null?void 0:e.stops)??this.stops,i=(e==null?void 0:e.pointBarriers)??se(this.pointBarriers),l=(e==null?void 0:e.polylineBarriers)??se(this.polylineBarriers),p=(e==null?void 0:e.polygonBarriers)??se(this.polygonBarriers);if(r==null)throw new O("routelayer:undefined-stops","the route layer must have stops defined in the route parameters.");if((Tt(r)||$t(r))&&r.features.length<2||P.isCollection(r)&&r.length<2)throw new O("routelayer:insufficent-stops","the route layer must have two or more stops to solve a route.");if(P.isCollection(r))for(const g of r)g.routeName=null;const u=e==null?void 0:e.apiKey,c=this.url,w=await this._getServiceDescription(c,u,t),v=(e==null?void 0:e.travelMode)??w.defaultTravelMode,a=(e==null?void 0:e.accumulateAttributes)??[];v!=null&&(a.push(v.distanceAttributeName),v.timeAttributeName&&a.push(v.timeAttributeName));const S={accumulateAttributes:a,directionsOutputType:"featuresets",ignoreInvalidLocations:!0,pointBarriers:i,polylineBarriers:l,polygonBarriers:p,preserveFirstStop:!0,preserveLastStop:!0,returnBarriers:!!i,returnDirections:!0,returnPolygonBarriers:!!p,returnPolylineBarriers:!!l,returnRoutes:!0,returnStops:!0,stops:r},I=ct.from(e??{});let B;I.set(S);try{B=await Rt(c,I,t)}catch(g){throw Xe(g)?g:new O("routelayer:failed-route-request","the routing request failed",{error:g})}const f=this._toRouteLayerSolution(B);return this._isOverridden("title")||(this.title=f.routeInfo.name??"Route"),Dt(f,w,I),f}update(e){const{stops:t,directionLines:r,directionPoints:i,pointBarriers:l,polylineBarriers:p,polygonBarriers:u,routeInfo:c}=e;this.set({stops:t,pointBarriers:l,polylineBarriers:p,polygonBarriers:u}),this._set("directionLines",r),this._set("directionPoints",i),this._set("routeInfo",c),c.geometry!=null&&(this.spatialReference=c.geometry.spatialReference)}_getNetworkFeatures(e,t,r,i){var g;const l=ee(e)?e.layers:(g=e.featureCollection)==null?void 0:g.layers,p=l==null?void 0:l.find(d=>d.layerDefinition.name===t);if(p==null)return new P;const{layerDefinition:u,popupInfo:c,featureSet:w}=p,v=u.drawingInfo.renderer,{features:a}=w,S=w.spatialReference??u.spatialReference??u.extent.spatialReference??me,I=v&&et(v),B=k.fromJSON(S),f=a.map(d=>{const s=E.fromJSON(d);s.geometry!=null&&d.geometry!=null&&d.geometry.spatialReference==null&&(s.geometry.spatialReference=B);const b=r(s);return b.symbol??(b.symbol=(I==null?void 0:I.getSymbol(s))??this._getNetworkSymbol(t)),b.popupTemplate??(b.popupTemplate=c&&tt.fromJSON(c)),b});return i&&f.some(d=>!d.symbol)&&i(f),new P(f)}_getNetworkSymbol(e){switch(e){case"Barriers":return this.defaultSymbols.pointBarriers;case"DirectionPoints":return this.defaultSymbols.directionPoints;case"DirectionLines":return this.defaultSymbols.directionLines;case"PolylineBarriers":return this.defaultSymbols.polylineBarriers;case"PolygonBarriers":return this.defaultSymbols.polygonBarriers;case"RouteInfo":return this.defaultSymbols.routeInfo;case"Stops":return null}}async _getServiceDescription(e,t,r){if(this._cachedServiceDescription!=null&&this._cachedServiceDescription.url===e)return this._cachedServiceDescription.serviceDescription;const i=await Pe(e,t,r);return this._cachedServiceDescription={serviceDescription:i,url:e},i}_setStopSymbol(e){if(!e||e.length===0||this.defaultSymbols.stops==null||e.every(({symbol:a})=>a!=null))return;const{first:t,last:r,middle:i,unlocated:l,waypoint:p,break:u}=this.defaultSymbols.stops;if(this.routeInfo==null||e.length===1)return void e.forEach((a,S)=>{switch(S){case 0:a.symbol=t;break;case e.length-1:a.symbol=r;break;default:a.symbol=i}});const c=e.map(({sequence:a})=>a).filter(a=>a!=null),w=Math.min(...c),v=Math.max(...c);for(const a of e)a.sequence!==w?a.sequence!==v?a.status==="ok"||a.status==="not-located-on-closest"?a.locationType!=="waypoint"?a.locationType!=="break"?a.symbol=i:a.symbol=u:a.symbol=p:a.symbol=l:a.symbol=r:a.symbol=t}_toRouteLayerSolution(e){var v,a,S,I,B,f,g;const t=(v=e.routeResults[0].stops)==null?void 0:v.map(d=>q.fromJSON(d.toJSON()));this._setStopSymbol(t);const r=new Be(t),i=new Se((a=e.polygonBarriers)==null?void 0:a.map(d=>{const s=W.fromJSON(d.toJSON());return s.symbol=this.defaultSymbols.polygonBarriers,s})),l=new be((S=e.polylineBarriers)==null?void 0:S.map(d=>{const s=z.fromJSON(d.toJSON());return s.symbol=this.defaultSymbols.polylineBarriers,s})),p=new ve((I=e.pointBarriers)==null?void 0:I.map(d=>{const s=U.fromJSON(d.toJSON());return s.symbol=this.defaultSymbols.pointBarriers,s})),u=(B=e.routeResults[0].route)==null?void 0:B.toJSON(),c=H.fromJSON(u);c.symbol=this.defaultSymbols.routeInfo;const w=new Lt((f=e.routeResults[0].directionPoints)==null?void 0:f.features.map(d=>{const s=Q.fromJSON(d.toJSON());return s.symbol=this.defaultSymbols.directionPoints,s}));return{directionLines:new Ot((g=e.routeResults[0].directionLines)==null?void 0:g.features.map(d=>{const s=V.fromJSON(d.toJSON());return s.symbol=this.defaultSymbols.directionLines,s})),directionPoints:w,pointBarriers:p,polygonBarriers:i,polylineBarriers:l,routeInfo:c,stops:r}}_writeDirectionLines(){return this._writeNetworkFeatures(this.directionLines,this.defaultSymbols.directionLines,"esriGeometryPolyline",V.fields,V.popupInfo,"DirectionLines","Direction Lines")}_writeDirectionPoints(){return this._writeNetworkFeatures(this.directionPoints,this.defaultSymbols.directionPoints,"esriGeometryPoint",Q.fields,Q.popupInfo,"DirectionPoints","Direction Points")}_writeNetworkFeatures(e,t,r,i,l,p,u){if(!(e!=null&&e.length))return null;const c=this.spatialReference.toJSON(),{fullExtent:w,maxScale:v,minScale:a}=this;return{featureSet:{features:e.toArray().map(S=>_t(S)),geometryType:r,spatialReference:c},layerDefinition:{capabilities:"Query,Update,Editing",drawingInfo:{renderer:{type:"simple",symbol:t!=null?t.toJSON():ae(r)}},extent:w.toJSON(),fields:i,geometryType:r,hasM:!1,hasZ:!1,maxScale:v,minScale:a,name:p,objectIdField:"ObjectID",spatialReference:c,title:u,type:"Feature Layer",typeIdField:""},popupInfo:l}}_writePointBarriers(){return this._writeNetworkFeatures(this.pointBarriers,this.defaultSymbols.pointBarriers,"esriGeometryPoint",U.fields,U.popupInfo,"Barriers","Point Barriers")}_writePolygonBarriers(){return this._writeNetworkFeatures(this.polygonBarriers,this.defaultSymbols.polygonBarriers,"esriGeometryPolygon",W.fields,W.popupInfo,"PolygonBarriers","Polygon Barriers")}_writePolylineBarriers(){return this._writeNetworkFeatures(this.polylineBarriers,this.defaultSymbols.polylineBarriers,"esriGeometryPolyline",z.fields,z.popupInfo,"PolylineBarriers","Line Barriers")}_writeRouteInfo(){return this._writeNetworkFeatures(this.routeInfo!=null?new P([this.routeInfo]):null,this.defaultSymbols.routeInfo,"esriGeometryPolyline",H.fields,H.popupInfo,"RouteInfo","Route Details")}_writeStops(){var p,u,c;const e=this._writeNetworkFeatures(this.stops,null,"esriGeometryPoint",q.fields,q.popupInfo,"Stops","Stops");if(e==null)return null;const{stops:t}=this.defaultSymbols,r=(p=t==null?void 0:t.first)==null?void 0:p.toJSON(),i=(u=t==null?void 0:t.middle)==null?void 0:u.toJSON(),l=(c=t==null?void 0:t.last)==null?void 0:c.toJSON();return e.layerDefinition.drawingInfo.renderer={type:"uniqueValue",field1:"Sequence",defaultSymbol:i,uniqueValueInfos:[{value:"1",symbol:r,label:"First Stop"},{value:`${this.stops.length}`,symbol:l,label:"Last Stop"}]},e}};o([n({readOnly:!0,json:{read:!1,origins:{"portal-item":{write:{allowNull:!0,ignoreOrigin:!0}},"web-map":{write:{overridePolicy(){return{allowNull:!0,ignoreOrigin:this.portalItem==null}}}}}}})],h.prototype,"_featureCollection",void 0),o([rt(["web-map","portal-item"],"_featureCollection")],h.prototype,"writeFeatureCollectionWebmap",null),o([n({readOnly:!0,json:{read:!1,origins:{"web-map":{write:{target:"type",overridePolicy(){return{ignoreOrigin:this.portalItem!=null}}}}}}})],h.prototype,"_type",void 0),o([n({nonNullable:!0,type:$e})],h.prototype,"defaultSymbols",void 0),o([n({readOnly:!0})],h.prototype,"directionLines",void 0),o([R(["web-map","portal-item"],"directionLines",["layers","featureCollection.layers"])],h.prototype,"readDirectionLines",null),o([n({readOnly:!0})],h.prototype,"directionPoints",void 0),o([R(["web-map","portal-item"],"directionPoints",["layers","featureCollection.layers"])],h.prototype,"readDirectionPoints",null),o([n({readOnly:!0,json:{read:!1,origins:{"web-map":{write:{ignoreOrigin:!0}}}}})],h.prototype,"featureCollectionType",void 0),o([n({readOnly:!0})],h.prototype,"fullExtent",null),o([n({json:{origins:{"web-map":{name:"featureCollection.showLegend"}},write:!0}})],h.prototype,"legendEnabled",void 0),o([n({type:["show","hide"]})],h.prototype,"listMode",void 0),o([n({type:Number,nonNullable:!0,json:{write:!1}})],h.prototype,"maxScale",void 0),o([R(["web-map","portal-item"],"maxScale",["layers","featureCollection.layers"])],h.prototype,"readMaxScale",null),o([n({type:Number,nonNullable:!0,json:{write:!1}})],h.prototype,"minScale",void 0),o([R(["web-map","portal-item"],"minScale",["layers","featureCollection.layers"])],h.prototype,"readMinScale",null),o([n({type:["ArcGISFeatureLayer"],value:"ArcGISFeatureLayer"})],h.prototype,"operationalLayerType",void 0),o([n({nonNullable:!0,type:P.ofType(U)})],h.prototype,"pointBarriers",void 0),o([R(["web-map","portal-item"],"pointBarriers",["layers","featureCollection.layers"])],h.prototype,"readPointBarriers",null),o([n({nonNullable:!0,type:P.ofType(W)})],h.prototype,"polygonBarriers",void 0),o([R(["web-map","portal-item"],"polygonBarriers",["layers","featureCollection.layers"])],h.prototype,"readPolygonBarriers",null),o([n({nonNullable:!0,type:P.ofType(z)})],h.prototype,"polylineBarriers",void 0),o([R(["web-map","portal-item"],"polylineBarriers",["layers","featureCollection.layers"])],h.prototype,"readPolylineBarriers",null),o([n({readOnly:!0})],h.prototype,"routeInfo",void 0),o([R(["web-map","portal-item"],"routeInfo",["layers","featureCollection.layers"])],h.prototype,"readRouteInfo",null),o([n({type:k})],h.prototype,"spatialReference",void 0),o([R(["web-map","portal-item"],"spatialReference",["layers","featureCollection.layers"])],h.prototype,"readSpatialReference",null),o([n({nonNullable:!0,type:P.ofType(q)})],h.prototype,"stops",void 0),o([R(["web-map","portal-item"],"stops",["layers","featureCollection.layers"])],h.prototype,"readStops",null),o([n()],h.prototype,"title",null),o([n({readOnly:!0,json:{read:!1}})],h.prototype,"type",void 0),o([n()],h.prototype,"url",null),h=o([C(_e)],h);const Zt=h;export{Zt as default};
