import{b5 as y,g as E,a$ as S,aL as w,bY as D,e6 as M,e7 as h,aT as N}from"./index-BS4ejk0L.js";import{$ as g}from"./Mesh-B3AcdbdY.js";import{o as T,i as F}from"./External-BnivL3sx.js";import{s as I}from"./infoFor3D-CxOdoily.js";const p=()=>N.getLogger("esri.rest.support.meshFeatureSet");function Y(e,t,r){const n=r.features;r.features=[],delete r.geometryType;const s=y.fromJSON(r);if(s.geometryType="mesh",!r.assetMaps)return s;const a=O(t,r.assetMaps),u=e.sourceSpatialReference??E.WGS84,f=r.globalIdFieldName,{outFields:o}=e,l=o!=null&&o.length>0?L(o.includes("*")?null:new Set(o)):()=>({});for(const c of n){const i=$(c,f,u,t,a);i!=null&&s.features.push(new S({geometry:i,attributes:l(c)}))}return s}function L(e){return({attributes:t})=>{if(!t)return{};if(!e)return t;for(const r in t)e.has(r)||delete t[r];return t}}function $(e,t,r,n,s){const a=e.attributes[t],u=s.get(a);if(u==null)return p().error("mesh-feature-set:asset-not-found","Service returned a feature which was not found in the asset map",e),null;if(!e.geometry)return p().error("mesh-feature-set:no-geometry","Service returned a feature without geometry",e),null;const f=b(e,r,n),o=w.fromJSON(e.geometry);o.spatialReference=r;const l=x(e.attributes,n),c=r.isGeographic?"local":"georeferenced",i=A(u);return i?g.createWithExternalSource(f,i,{extent:o,transform:l,vertexSpace:c}):g.createIncomplete(f,{extent:o,transform:l,vertexSpace:c})}function b({attributes:e},t,{transformFieldRoles:r}){const n=e[r.originX],s=e[r.originY],a=e[r.originZ];return new D({x:n,y:s,z:a,spatialReference:t})}function x(e,{transformFieldRoles:t}){return new M({translation:[e[t.translationX],-e[t.translationZ],e[t.translationY]],rotationAxis:[e[t.rotationX],-e[t.rotationZ],e[t.rotationY]],rotationAngle:e[t.rotationDeg],scale:[e[t.scaleX],e[t.scaleZ],e[t.scaleY]]})}var m;function O(e,t){const r=new Map;for(const n of t){const s=n.parentGlobalId;if(s==null)continue;const a=n.assetName,u=n.assetType,f=n.assetHash,o=n.assetURL,l=n.conversionStatus,c=n.seqNo,i=I(u,e.supportedFormats);if(!i){p().error("mesh-feature-set:unknown-format",`Service returned an asset of type ${u}, but it does not list it as a supported type`);continue}const d=h(r,s,()=>({files:new Map}));h(d.files,a,()=>({name:a,type:u,mimeType:i,status:P(l),parts:[]})).parts[c]={hash:f,url:o}}return r}function A(e){const t=Array.from(e.files.values()),r=new Array;for(const n of t){if(n.status!==m.COMPLETED)return null;const s=new Array;for(const a of n.parts){if(!a)return null;s.push(new T(a.url,a.hash))}r.push(new F(n.name,n.mimeType,s))}return r}function P(e){switch(e){case"COMPLETED":case"SUBMITTED":return m.COMPLETED;case"INPROGRESS":return m.PENDING;default:return m.FAILED}}(function(e){e[e.FAILED=0]="FAILED",e[e.PENDING=1]="PENDING",e[e.COMPLETED=2]="COMPLETED"})(m||(m={}));export{O as assetMapFromAssetMapsJSON,$ as extractMesh,Y as meshFeatureSetFromJSON};
