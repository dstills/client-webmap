import{be as c,E as s,F as i,d1 as f,J as v,bt as x,bA as m,d2 as b,ix as z,c8 as E,eJ as $,iy as _,iz as w}from"./index-BS4ejk0L.js";import{c as A}from"./Analysis-DU3KgEb8.js";import{f as O,u as R}from"./LineOfSightAnalysisTarget-DBpNc0r1.js";const a=c.ofType(O);let t=class extends A{constructor(e){super(e),this.type="line-of-sight",this.observer=null,this.extent=null}initialize(){this.addHandles(x(()=>this._computeExtent(),e=>{(e==null?void 0:e.pending)==null&&this._set("extent",e!=null?e.extent:null)},m))}get targets(){return this._get("targets")||new a}set targets(e){this._set("targets",b(e,this.targets,a))}get spatialReference(){var e;return((e=this.observer)==null?void 0:e.position)!=null?this.observer.position.spatialReference:null}get requiredPropertiesForEditing(){var e;return[(e=this.observer)==null?void 0:e.position]}async waitComputeExtent(){const e=this._computeExtent();return e!=null?e.pending:Promise.resolve()}_computeExtent(){var d;const e=this.spatialReference;if(((d=this.observer)==null?void 0:d.position)==null||e==null)return null;const p=r=>w(r.position,r.elevationInfo)==="absolute-height",n=this.observer.position,u=z(n.x,n.y,n.z,n.x,n.y,n.z);for(const r of this.targets)if(r.position!=null){const o=E(r.position,e);if(o.pending!=null)return{pending:o.pending,extent:null};if(o.geometry!=null){const{x:g,y:h,z:y}=o.geometry;$(u,[g,h,y])}}const l=_(u,e);return p(this.observer)&&this.targets.every(p)||(l.zmin=void 0,l.zmax=void 0),{pending:null,extent:l}}clear(){this.observer=null,this.targets.removeAll()}};s([i({type:["line-of-sight"]})],t.prototype,"type",void 0),s([i({type:R,json:{read:!0,write:!0}})],t.prototype,"observer",void 0),s([i({cast:f,type:a,nonNullable:!0,json:{read:!0,write:!0}})],t.prototype,"targets",null),s([i({value:null,readOnly:!0})],t.prototype,"extent",void 0),s([i({readOnly:!0})],t.prototype,"spatialReference",null),s([i({readOnly:!0})],t.prototype,"requiredPropertiesForEditing",null),t=s([v("esri.analysis.LineOfSightAnalysis")],t);const q=t;export{q as v};
