import{em as p,fA as l,el as m,av as d,j9 as u,o7 as g,br as n,by as a,M as r}from"./index-HSyhVbHY.js";import{t as _}from"./ElevationProfile-D2NXLDlu.js";import{a as v}from"./HoveredPoints-C8fnCPC-.js";import"./memoize-DsJmrG76.js";import"./defaultUnit-BQMvchOG.js";import"./getDefaultUnitForView-Q3iPhipP.js";import"./throttle-jjSnxk80.js";import"./geodesicUtils-e5vu0xFy.js";import"./traversalUtils-DmE6QkgJ.js";import"./ElevationQuery-DdBBTGhr.js";import"./GraphicsLayer-DkS6dBJ7.js";import"./SketchViewModel-4sJ8HxEY.js";import"./layerUtils-BS1Di3Pm.js";import"./angularMeasurementUtils-Wmsz632s.js";import"./geometry2dUtils-Ngt_647h.js";import"./quantityUtils-SoiiT3xW.js";import"./SketchLabelOptions-Bla26rwL.js";import"./SnappingManager-DFfN6h61.js";import"./viewUtils-CzRpRjgJ.js";import"./geometryEngine-CIH2kImN.js";import"./geometryEngineBase-B06yTp3V.js";import"./hydrated-DjRHPFdM.js";import"./geodesicMeasurementUtils-HI0P2oy0.js";import"./unitFormatUtils-DNjP3hr8.js";import"./UnitSelect-CJ8PtC71.js";import"./AnchorElementViewModel-CbOun0qh.js";class c{constructor(t){this._params=t,this._highlightTask=null,this._highlightHandle=null}destroy(){this.remove()}remove(){this._highlightTask=p(this._highlightTask),this._highlightHandle=l(this._highlightHandle)}update(t){if(this.remove(),t==null||!w(t))return;const e=t.layer;this._highlightTask=m(async i=>{const h=await this._params.view.whenLayerView(e);d(i);const o=u(h)?h:null;o&&(this._highlightHandle=o.highlight(t))})}}function w(s){return s.geometry!=null&&s.geometry.type==="polyline"}class K{constructor(t,e){this._handles=new g,this._inputRepresentation=new c({view:t}),this._hoveredPoints=new v({view:t}),this._handles.add([n(()=>e.viewModel.hoveredPoints,i=>this._hoveredPoints.update(i),a),n(()=>{const{state:i,highlightEnabled:h,viewModel:o}=e;return{input:o.input,state:i,highlightEnabled:h}},i=>this._updateInputRepresentation(i),a)])}destroy(){this._handles=r(this._handles),this._inputRepresentation=r(this._inputRepresentation),this._hoveredPoints=r(this._hoveredPoints)}_updateInputRepresentation({input:t,state:e,highlightEnabled:i}){e===_.Selected&&i?this._inputRepresentation.update(t):this._inputRepresentation.remove()}}export{K as ElevationProfileView2D};
