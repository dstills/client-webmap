import{ar as l,D as h,c_ as d,bl as y,c0 as u,g as n,y as a,i as _}from"./index-BhDz4nJ7.js";import{X as f,n as g}from"./FeatureLayerView2D-DuGi0W6D.js";import{r as v}from"./StreamLayerView-dpQiuoP3.js";import"./highlightReasons-oPQR33ZA.js";import"./Tile-Bw3qZqtY.js";import"./quickselect-C4F3mpYw.js";import"./LayerView2D-CnHSL2ze.js";import"./Container-BXVidpqz.js";import"./ClipRect-IkMaETau.js";import"./TechniqueInstance-DCkShiYG.js";import"./UpdateTracking2D-D16VlBPt.js";import"./TurboLine-CEOhZHLm.js";import"./LabelMetric-CeMeOwg_.js";import"./constants-D5zmR9t2.js";import"./TileContainer-BTh3SyKI.js";import"./WGLContainer-BH0kviEM.js";import"./WGLBrushVTLSymbol-DtHTPLWt.js";import"./vec4f32-CjrfB-0a.js";import"./ShaderCompiler-G2XYGDs6.js";import"./ProgramTemplate-COAJiysE.js";import"./tileUtils-B7X19rIS.js";import"./SDFHelper-CGoNtvfL.js";import"./FeatureCommandQueue-DhWQMpDE.js";import"./heatmapTextureUtils-F_IWNXr_.js";import"./HighlightCounter-DeEkdPO1.js";import"./FeatureLayerView-B63fN2z9.js";import"./popupUtils-MZRTyQW5.js";import"./LayerView-C77uL6vR.js";import"./RefreshableLayerView-CWwfo6pL.js";let r=class extends v(f){constructor(){super(...arguments),this.pipelineConnectionStatus="disconnected",this.pipelineErrorString=null}initialize(){this.addHandles([l(()=>this.layer.customParameters,e=>this._worker.streamMessenger.updateCustomParameters(e)),this.layer.on("send-message-to-socket",e=>this._worker.streamMessenger.sendMessageToSocket(e)),this.layer.on("send-message-to-client",e=>{this._worker.streamMessenger.sendMessageToClient(e),this._isUserPaused&&"type"in e&&e.type==="clear"&&this.incrementSourceRefreshVersion()}),l(()=>this.layer.purgeOptions,()=>this._update()),l(()=>this.suspended,this._onSuspendedChange.bind(this))],"constructor"),this._doResume()}destroy(){this._doPause()}get connectionError(){return this.pipelineErrorString?new h("stream-controller",this.pipelineErrorString):null}on(e,s){if(Array.isArray(e))return d(e.map(p=>this.on(p,s)));const t=["data-received","message-received"].includes(e);t&&this._worker.streamMessenger.enableEvent(e,!0);const o=super.on(e,s),i=this;return y(()=>{o.remove(),t&&(i._worker.closed||i.hasEventListener(e)||i._worker.streamMessenger.enableEvent(e,!1))})}queryLatestObservations(e,s){var t,o,i;if(!((t=this.layer.timeInfo)!=null&&t.endField||(o=this.layer.timeInfo)!=null&&o.startField||(i=this.layer.timeInfo)!=null&&i.trackIdField))throw new h("streamlayer-no-timeField","queryLatestObservation can only be used with services that define a TrackIdField");return g(this._worker.features.executeQueryForLatestObservations(this._cleanUpQuery(e),s).then(p=>{const m=u.fromJSON(p);return m.features.forEach(c=>{c.layer=this.layer,c.sourceLayer=this.layer}),m}),new u({features:[]}))}detach(){super.detach(),this.pipelineConnectionStatus="disconnected"}get _streamConnectionStatus(){return this.pipelineConnectionStatus}_doPause(){this._refreshInterval!=null&&(clearInterval(this._refreshInterval),this._refreshInterval=null)}_doResume(){this._refreshInterval=setInterval(()=>this.incrementSourceRefreshVersion(),this.layer.updateInterval)}_doDisconnect(){this._worker.streamMessenger.disconnect(),this._doPause()}_doConnect(){this._worker.streamMessenger.connect(),this.resume()}_doClear(){this._worker.streamMessenger.clear(),this._refreshInterval==null&&this.incrementSourceRefreshVersion()}_createClientOptions(){const e=super._createClientOptions(),s=this;return{...e,get container(){return s.featureContainer},setProperty:t=>{this.set(t.propertyName,t.value)}}}};n([a()],r.prototype,"pipelineConnectionStatus",void 0),n([a()],r.prototype,"pipelineErrorString",void 0),n([a({readOnly:!0})],r.prototype,"connectionError",null),n([a({readOnly:!0})],r.prototype,"_streamConnectionStatus",null),r=n([_("esri.views.2d.layers.StreamLayerView2D")],r);const G=r;export{G as default};
