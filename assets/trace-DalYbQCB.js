import{c1 as i,hr as g,hs as y,bE as u}from"./index-BhDz4nJ7.js";import{a as l}from"./UtilityNetwork-2SDC2bhE.js";async function d(a,e,o){const t=i(a),r=e.toJSON();r.traceLocations=JSON.stringify(e.traceLocations),e.resultTypes&&(r.resultTypes=JSON.stringify(e.resultTypes));const n=g(t.query,{query:y({...r,f:"json"}),...o}),s=`${t.path}/trace`;return u(s,n).then(c=>p(c,e.outSpatialReference))}async function J(a,e,o){const t=i(a),r=e.toJSON();r.traceLocations=JSON.stringify(e.traceLocations),e.resultTypes&&(r.resultTypes=JSON.stringify(e.resultTypes));const n=g(t.query,{query:y({...r,async:!0,f:"json"}),...o}),s=`${t.path}/trace`,{data:c}=await u(s,n);return c.statusUrl}function p(a,e){const{data:o}=a,t=l.fromJSON(o.traceResults);return t.aggregatedGeometry&&e&&(t.aggregatedGeometry.line&&(t.aggregatedGeometry.line.spatialReference=e.clone()),t.aggregatedGeometry.multipoint&&(t.aggregatedGeometry.multipoint.spatialReference=e.clone()),t.aggregatedGeometry.polygon&&(t.aggregatedGeometry.polygon.spatialReference=e.clone())),t}export{J as submitTraceJob,d as trace};
