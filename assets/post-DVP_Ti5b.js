import{g as i,y as c,i as v,eM as y,D as u,c1 as l,hr as d,hs as f,bE as $}from"./index-nBWeBKPv.js";import{r as j}from"./serverVersionUtils-9uFumxhl.js";let t=class extends y{constructor(s){super(s),this.moment=null,this.success=!1}};i([c({type:Date,json:{type:Number,write:{writer:(s,e)=>{e.moment=s?s.getTime():null}}}})],t.prototype,"moment",void 0),i([c({type:Boolean,json:{write:!0}})],t.prototype,"success",void 0),t=i([v("esri.rest.versionManagement.gdbVersion.support.PostResult")],t);const M=t,n=new Map;async function b(s,e,r,m){n.has(s)||await j(n,s);const o=n.get(s);if(((o==null?void 0:o.serverVersion)??0)<=11.1)throw new u("post:enterprise-version","versioning API requires ArcGIS Enterprise version 11.2 or higher");if(!e)throw new u("post:missing-guid","guid for version is missing");const a=l(s),p=r.toJSON();r.rows&&(p.rows=JSON.stringify(r.rows));const h=d(a.query,{query:f({...p,f:"json"}),...m,method:"post"});e.startsWith("{")&&(e=e.slice(1,-1));const w=`${a.path}/versions/${e}/post`,{data:g}=await $(w,h);return M.fromJSON(g)}export{b as post,n as serverVersionCacheMap};
