import{c1 as p,hs as v,hr as y,bE as m,D as g}from"./index-nBWeBKPv.js";import{b as S}from"./UtilityNetwork-BYQes_lQ.js";async function b(s,t,e){var l;const o=p(s),i=t.toJSON();t.validationSet&&(i.validationSet=JSON.stringify(t.validationSet));const n={...i,returnEdits:!0,f:"json"},r=v({...o.query,...n}),a=y(r,{...e,method:"post"}),c=`${o.path}/validateNetworkTopology`,{data:f}=await m(c,a),d=S.fromJSON(f);return d.serviceEdits=((l=d.serviceEdits)==null?void 0:l.map(u=>({layerId:u.id,editedFeatures:u.editedFeatures})))??[],d}async function h(s,t,e){if(!t.gdbVersion)throw new g("submit-validate-network-topology-job:missing-gdb-version","version is missing");const o=p(s),i=t.toJSON();t.validationSet&&(i.validationSet=JSON.stringify(t.validationSet));const n=y(o.query,{query:v({...i,returnEdits:!0,async:!0,f:"json"}),...e,method:"post"}),r=`${o.path}/validateNetworkTopology`,{data:a}=await m(r,n);return a?a.statusUrl:null}export{h as submitValidateNetworkTopologyJob,b as validateNetworkTopology};
