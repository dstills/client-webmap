import{bU as x,m6 as O,m7 as P,ax as D,e9 as q,m8 as E,m9 as G,ma as U,mb as A,mc as B,cS as H,fg as J}from"./index-nBWeBKPv.js";async function W(t,d,l,p,o){const{elevationProvider:f,renderCoordsHelper:i}=t,{elevationInfo:u}=d,{pointsInFeatures:b,spatialReference:g}=p,h=x.fromJSON(g),m=O(u,!0),y=await P(m,h,o);D(o);const c=[],e=new Set,s=new Set,a=new A,n=q(0,0,0,x.WGS84),r=new B,R=H();n.spatialReference=h;const j=t.elevationProvider.spatialReference??t.spatialReference;for(const{objectId:S,points:v}of b){const I=l(S);if(I==null){for(const w of v)c.push(w.z??0);e.add(S);continue}I.isDraped&&s.add(S);const z=I.graphic.geometry;a.setFromElevationInfo(E(z,u)),a.updateFeatureExpressionInfoContext(y,I.graphic,d);for(const{x:w,y:C,z:F}of v)n.x=w,n.y=C,n.z=F??0,await G(n,R,j,0,{signal:o}),U(R,f,a,i,r),c.push(r.z)}return{elevations:c,drapedObjectIds:s,failedObjectIds:e}}async function k(t,d,l){if(t==null||d.candidates.length===0)return $;const p=t.graphics3DGraphicsByObjectID??t.graphics3DGraphics,o=[],f=[],{renderer:i}=t,u=i!=null&&"arcadeRequired"in i&&i.arcadeRequired?J():null,b=async(e,{graphic:s,graphics3DSymbol:a})=>{const n=await u,r=await t.getRenderingInfoAsync(s,i,n,{signal:l});return r==null?[]:a.queryForSnapping(e,h,r,l)},{candidates:g,spatialReference:h}=d;for(let e=0;e<g.length;++e){const s=g[e],{objectId:a}=s,n=typeof a=="number"?p==null?void 0:p.get(a):void 0;if(n==null)continue;const{graphics3DSymbol:r}=n;r.symbologySnappingSupported&&(o.push(b(s,n)),f.push(e))}if(o.length===0)return $;const m=await Promise.all(o);D(l);const y=[],c=[];for(let e=0;e<m.length;++e){const s=m[e],a=f[e];for(const n of s)y.push(n),c.push(a)}return{candidates:y,sourceCandidateIndices:c}}const $={candidates:[],sourceCandidateIndices:[]};export{W as m,k as r};
