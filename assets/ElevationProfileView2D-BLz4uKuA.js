import{au as l,cV as p,av as d,ax as u,oK as g,oL as _,ar as o,at as r,u as a}from"./index-nBWeBKPv.js";import{t as m}from"./ElevationProfile-LINWCxB1.js";import{a as v}from"./HoveredPoints-CcrOR86U.js";import"./memoize-DsJmrG76.js";import"./throttle-jjSnxk80.js";import"./traversalUtils-DmE6QkgJ.js";import"./ElevationQuery-cp6baljX.js";import"./UnitSelect-CDGTdVJo.js";class c{constructor(t){this._params=t,this._highlightTask=null,this._highlightHandle=null}destroy(){this.remove()}remove(){this._highlightTask=l(this._highlightTask),this._highlightHandle=p(this._highlightHandle)}update(t){if(this.remove(),t==null||!w(t))return;const i=t.layer;this._highlightTask=d(async e=>{const h=await this._params.view.whenLayerView(i);u(e);const n=g(h)?h:null;n&&(this._highlightHandle=n.highlight(t))})}}function w(s){return s.geometry!=null&&s.geometry.type==="polyline"}class T{constructor(t,i){this._handles=new _,this._inputRepresentation=new c({view:t}),this._hoveredPoints=new v({view:t}),this._handles.add([o(()=>i.viewModel.hoveredPoints,e=>this._hoveredPoints.update(e),r),o(()=>{const{state:e,highlightEnabled:h,viewModel:n}=i;return{input:n.input,state:e,highlightEnabled:h}},e=>this._updateInputRepresentation(e),r)])}destroy(){this._handles=a(this._handles),this._inputRepresentation=a(this._inputRepresentation),this._hoveredPoints=a(this._hoveredPoints)}_updateInputRepresentation({input:t,state:i,highlightEnabled:e}){i===m.Selected&&e?this._inputRepresentation.update(t):this._inputRepresentation.remove()}}export{T as ElevationProfileView2D};
