import{g_ as U,g$ as k,h0 as z,jn as V,h1 as K,jM as W,jL as F,bU as b,bK as w,cE as $,dL as x,dB as G,d8 as y,jY as A,dj as S,ix as I,jZ as E,j_ as j,j$ as D,k0 as d,D as P,bR as N,bE as X,k1 as R,k2 as q,aK as T,k3 as O,g as f,y as u,k4 as Z,h8 as B,i as Y,bh as C,cS as v}from"./index-nBWeBKPv.js";let p=class extends U(k(z(V(K(W(F(C))))))){constructor(a){super(a),this.operationalLayerType="IntegratedMesh3DTilesLayer",this.spatialReference=new b({wkid:4326,vcsWkid:115700}),this.fullExtent=new w(-180,-90,180,90,this.spatialReference),this.url=null,this.type="integrated-mesh-3dtiles",this.path=null,this.minScale=0,this.maxScale=0}set elevationInfo(a){this._set("elevationInfo",a),this._validateElevationInfo()}_verifyArray(a,i){if(!Array.isArray(a)||a.length<i)return!1;for(const o of a)if(typeof o!="number")return!1;return!0}_initFullExtent(a){var L,M;const i=(L=a.root)==null?void 0:L.boundingVolume;if(!i)return;if(i.box){const t=i==null?void 0:i.box;if(t[3]>7972671&&t[7]>7972671&&t[11]>7945940)return}const o=(M=a.root)==null?void 0:M.transform,m=v();if(i.region&&this._verifyArray(i.region,6)){const t=i.region,l=$(t[0]),n=$(t[1]),s=t[4],r=$(t[2]),e=$(t[3]),h=t[5];this.fullExtent=new w({xmin:l,ymin:n,zmin:s,xmax:r,ymax:e,zmax:h,spatialReference:this.spatialReference})}else if(i.sphere&&this._verifyArray(i.sphere,4)){const t=i.sphere,l=x(t[0],t[1],t[2]),n=t[3]/Math.sqrt(3),s=v();G(s,l,x(-n,-n,-n));const r=v();if(y(r,l,x(n,n,n)),o&&this._verifyArray(o,16)){const g=o;A(m,s,g),S(s,m),A(m,r,g),S(r,m)}I(s,E,0,s,b.WGS84,0,1),I(r,E,0,r,b.WGS84,0,1);const e=v(),h=v();j(e,s,r),D(h,s,r),this.fullExtent=new w({xmin:e[0],ymin:e[1],zmin:e[2],xmax:h[0],ymax:h[1],zmax:h[2],spatialReference:this.spatialReference})}else if(i.box&&this._verifyArray(i.box,12)){const t=i.box,l=x(t[0],t[1],t[2]),n=x(t[3],t[4],t[5]),s=x(t[6],t[7],t[8]),r=x(t[9],t[10],t[11]),e=[];for(let c=0;c<8;++c)e.push(v());if(y(e[0],l,n),y(e[0],e[0],s),y(e[0],e[0],r),d(e[1],l,n),y(e[1],e[1],s),y(e[1],e[1],r),y(e[2],l,n),d(e[2],e[2],s),y(e[2],e[2],r),d(e[3],l,n),d(e[3],e[3],s),y(e[3],e[3],r),y(e[4],l,n),y(e[4],e[4],s),d(e[4],e[4],r),d(e[5],l,n),y(e[5],e[5],s),d(e[5],e[5],r),y(e[6],l,n),d(e[6],e[6],s),d(e[6],e[6],r),d(e[7],l,n),d(e[7],e[7],s),d(e[7],e[7],r),o&&this._verifyArray(o,16)){const c=o;for(let _=0;_<8;++_)A(e[_],e[_],c)}const h=x(Number.MIN_VALUE,Number.MIN_VALUE,Number.MIN_VALUE),g=x(Number.MAX_VALUE,Number.MAX_VALUE,Number.MAX_VALUE);for(let c=0;c<8;++c)I(e[c],E,0,e[c],b.WGS84,0,1),j(g,g,e[c]),D(h,h,e[c]);this.fullExtent=new w({xmin:g[0],ymin:g[1],zmin:g[2],xmax:h[0],ymax:h[1],zmax:h[2],spatialReference:this.spatialReference})}}async load(a){return this.addResolvingPromise(this._doLoad(a)),this}async _doLoad(a){const i=a!=null?a.signal:null;try{await this.loadFromPortal({supportedTypes:["3DTiles Service"],validateItem:o=>{var m;if((m=o.typeKeywords)!=null&&m.includes("IntegratedMesh"))return!0;throw new P("portal:invalid-layer-item-type","Invalid layer item, expected '${expectedType}' ",{expectedType:"3DTiles Service containing IntegratedMesh"})}},a)}catch(o){N(o)}this.url&&await X(this.url,{query:{f:"json",...this.customParameters,token:this.apiKey},responseType:"json",signal:i}).then(m=>{this._initFullExtent(m.data)},m=>{N(m)})}async fetchAttributionData(){return this.load().then(()=>({}))}_validateElevationInfo(){const a=this.elevationInfo,i="Integrated mesh 3d tiles layers";R(T.getLogger(this),q(i,"absolute-height",a)),R(T.getLogger(this),O(i,a))}};f([u({type:["IntegratedMesh3DTilesLayer"]})],p.prototype,"operationalLayerType",void 0),f([u({type:b})],p.prototype,"spatialReference",void 0),f([u({type:w})],p.prototype,"fullExtent",void 0),f([u(Z)],p.prototype,"elevationInfo",null),f([u({type:["show","hide"]})],p.prototype,"listMode",void 0),f([u(B)],p.prototype,"url",void 0),f([u({readOnly:!0})],p.prototype,"type",void 0),f([u({type:String,json:{origins:{"web-scene":{read:!0,write:!0},"portal-item":{read:!0,write:!0}},read:!1}})],p.prototype,"path",void 0),f([u({type:Number,json:{origins:{"web-scene":{name:"layerDefinition.minScale",write:()=>{},read:()=>{}},"portal-item":{name:"layerDefinition.minScale",write:()=>{},read:()=>{}}}}})],p.prototype,"minScale",void 0),f([u({type:Number,json:{origins:{"web-scene":{name:"layerDefinition.maxScale",write:()=>{},read:()=>{}},"portal-item":{name:"layerDefinition.maxScale",write:()=>{},read:()=>{}}}}})],p.prototype,"maxScale",void 0),p=f([Y("esri.layers.IntegratedMesh3DTilesLayer")],p);const J=p;export{J as default};
