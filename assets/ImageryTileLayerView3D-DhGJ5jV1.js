import{b as y,w as u,eP as g,eQ as f,E as h,F as c,J as b}from"./index-HSyhVbHY.js";import{s as I}from"./rasterProjectionHelper-B1L3D3vn.js";import{n as R}from"./LayerView3D-DTnwkqtn.js";import{c as w}from"./TiledLayerView3D-ByXxZhlV.js";import{p as z}from"./ImageryTileLayerView-Di-gJZ7J.js";import{u as v}from"./LayerView-D_2WUzSy.js";import{i as T}from"./RefreshableLayerView-nhECpckg.js";import{r as x}from"./drapedUtils-CEFFqJhQ.js";import"./popupUtils-2vg8rKMo.js";let o=class extends z(T(w(R(v)))){constructor(){super(...arguments),this.type="imagery-tile-3d",this.isAlignedMapTile=!0}initialize(){this.layer.increaseRasterJobHandlerUsage(),this.fullExtent==null&&this.addResolvingPromise(Promise.reject(new y("layerview:spatial-reference-incompatible","The layer extent cannot be projected to the view's spatial reference",{layer:this.layer})));const e=u(()=>{var t,i;return(i=(t=this.view)==null?void 0:t.basemapTerrain)==null?void 0:i.tilingSchemeLocked}).then(()=>{const t=this.view.basemapTerrain.tilingScheme,i=this.layer.tileInfo,r=["png","png24","png32","jpg","mixed"].includes(i.format)&&t.compatibleWith(i);this.isAlignedMapTile=r;const a=r?i:t.toTileInfo();this.tileInfo=a,this._updatingHandles.add(()=>[this.layer.renderer,this.layer.interpolation,this.layer.bandIds,this.layer.multidimensionalDefinition,this.layer.multidimensionalSubset,this.layer.rasterFunction,this.timeExtent],()=>this.refresh())});this.addResolvingPromise(e)}destroy(){this.layer.decreaseRasterJobHandlerUsage(),this.view=null}get _blankTile(){const e=document.createElement("canvas"),t=e.getContext("2d"),[i,r]=this.tileInfo.size;return e.width=i,e.height=r,t.clearRect(0,0,i,r),t.getImageData(0,0,i,r)}get imageFormatIsOpaque(){return this.layer.tileInfo.format==="jpg"}get hasMixedImageFormats(){return this.layer.tileInfo.format==="mixed"}get dataLevelRange(){var r,a;const e=this.layer.tileInfo,t=(r=this.tileInfo.lodAt(0))==null?void 0:r.scale,i=(a=this.layer.tileInfo.lodAt(e.lods.length-1))==null?void 0:a.scale;return this.levelRangeFromScaleRange(t,i)}_getfullExtent(){var e;return I(this.layer.serviceRasterInfo,((e=this.view.basemapTerrain)==null?void 0:e.spatialReference)!=null?this.view.basemapTerrain.spatialReference:this.view.spatialReference)}async fetchTile(e,t,i,r){const a=this.tileInfo,m=this._canSymbolizeInWebGL(),d={tileInfo:a,requestRawData:m,signal:r.signal,timeExtent:this.timeExtent,requestAsImageElement:this.isAlignedMapTile,noClip:!1},{layer:s}=this,l=await s.fetchTile(e,t,i,d);if(l instanceof HTMLImageElement)return l;let p=l==null?void 0:l.pixelBlock;if(p==null)return this._blankTile;if(!m&&(p=await s.applyRenderer(l),p==null))return this._blankTile;const n=new g([e,t,i],p,a.size[0],a.size[1]);return m?(n.symbolizerRenderer=s.symbolizer.rendererJSON,n.symbolizerParameters=s.symbolizer.generateWebGLParameters(this._getSymbolizerOptions(e)),n.transformGrid=l.transformGrid,n.bandIds=s.bandIds):(n.isRendereredSource=!0,n.bandIds=null),n.interpolation=s.interpolation,n}_getSymbolizerOptions(e){var i;const t=this.tileInfo.lodAt(e).resolution;return{pixelBlock:null,isGCS:((i=this.view.basemapTerrain)==null?void 0:i.spatialReference)!=null?this.view.basemapTerrain.spatialReference.isGeographic:this.view.spatialReference.isGeographic,resolution:{x:t,y:t},bandIds:this.layer.bandIds}}ensureSymbolizerParameters(e){this._canSymbolizeInWebGL()&&JSON.stringify(e.symbolizerRenderer)!==JSON.stringify(this.layer.symbolizer.rendererJSON)&&(e.symbolizerParameters=this.layer.symbolizer.generateWebGLParameters(this._getSymbolizerOptions(e.lij[0])))}createFetchPopupFeaturesQueryGeometry(e,t){return x(e,t,this.view)}refresh(){this.emit("data-changed")}async doRefresh(){this.suspended||this.emit("data-changed")}_canSymbolizeInWebGL(){var m,d,s;const e=f(),{symbolizer:t}=this.layer,i=(d=(m=t.lookup)==null?void 0:m.colormapLut)==null?void 0:d.indexedColormap,r=!!((s=this.layer.rasterFunction)!=null&&s.hasClipFunction),a=i&&i.length>4*(e.maxTextureSize||4906);return t.canRenderInWebGL&&!a&&!r}};h([c({readOnly:!0})],o.prototype,"_blankTile",null),h([c({readOnly:!0})],o.prototype,"imageFormatIsOpaque",null),h([c({readOnly:!0})],o.prototype,"hasMixedImageFormats",null),h([c({readOnly:!0})],o.prototype,"dataLevelRange",null),o=h([b("esri.views.3d.layers.ImageryTileLayerView3D")],o);const A=o;export{A as default};
