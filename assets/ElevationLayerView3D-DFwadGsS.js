import{b as p,E as i,F as y,J as u}from"./index-BS4ejk0L.js";import{n as h}from"./LayerView3D-CyxA26u0.js";import{c as v}from"./TiledLayerView3D-Cpr82wE4.js";import{u as f}from"./LayerView-BXe9D6EI.js";let e=class extends v(h(f)){constructor(){super(...arguments),this.type="elevation-3d"}get tileInfo(){return this.layer.tileInfo}initialize(){var a,r,o,l,n;const t=(r=(a=this.view)==null?void 0:a.map)==null?void 0:r.allLayers,d=t&&t.includes(this.layer),s=(n=(l=(o=this.view)==null?void 0:o.map)==null?void 0:l.ground)==null?void 0:n.layers,m=s&&s.includes(this.layer);if(d&&!m){const c=new p("layerview:elevation-layer-only","3D elevation layer '"+this.layer.id+"' can only be added to layers in map.ground");this.addResolvingPromise(Promise.reject(c))}this._addTilingSchemeMatchPromise()}};i([y()],e.prototype,"layer",void 0),i([y()],e.prototype,"tileInfo",null),e=i([u("esri.views.3d.layers.ElevationLayerView3D")],e);const P=e;export{P as default};
