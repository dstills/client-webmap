import{k6 as i,k7 as d,k8 as f,bE as p}from"./index-BhDz4nJ7.js";import{t as l}from"./query-CGw84oGO.js";import"./pbfQueryUtils-Dark8sO6.js";import"./pbf-7bahT4Qy.js";function y(n){const t=n.toJSON();return t.attachmentTypes&&(t.attachmentTypes=t.attachmentTypes.join(",")),t.keywords&&(t.keywords=t.keywords.join(",")),t.globalIds&&(t.globalIds=t.globalIds.join(",")),t.objectIds&&(t.objectIds=t.objectIds.join(",")),t.size&&(t.size=t.size.join(",")),t}function q(n,t){const e={};for(const o of t){const{parentObjectId:a,parentGlobalId:s,attachmentInfos:r}=o;for(const c of r){const{id:u}=c,h=i(d(`${n.path}/${a}/attachments/${u}`)),m=f.fromJSON(c);m.set({url:h,parentObjectId:a,parentGlobalId:s}),e[a]?e[a].push(m):e[a]=[m]}}return e}function O(n,t,e){let o={query:l({...n.query,f:"json",...y(t)})};return e&&(o={...e,...o,query:{...e.query,...o.query}}),p(n.path+"/queryAttachments",o).then(a=>a.data.attachmentGroups)}async function $(n,t,e){const{objectIds:o}=t,a=[];for(const s of o)a.push(p(n.path+"/"+s+"/attachments",e));return Promise.all(a).then(s=>o.map((r,c)=>({parentObjectId:r,attachmentInfos:s[c].data.attachmentInfos})))}export{O as executeAttachmentQuery,$ as fetchAttachments,q as processAttachmentQueryResult};
