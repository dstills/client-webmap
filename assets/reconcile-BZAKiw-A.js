import{E as t,F as r,J as w,dw as y,b as c,b6 as v,dy as f,dz as g,aB as j}from"./index-BS4ejk0L.js";import{r as b}from"./serverVersionUtils-ZQFwPOpf.js";let o=class extends y{constructor(e){super(e),this.hasConflicts=!1,this.moment=null,this.didPost=!1,this.success=!1}};t([r({type:Boolean,json:{write:!0}})],o.prototype,"hasConflicts",void 0),t([r({type:Date,json:{type:Number,write:{writer:(e,s)=>{s.moment=e?e.getTime():null}}}})],o.prototype,"moment",void 0),t([r({type:Boolean,json:{write:!0}})],o.prototype,"didPost",void 0),t([r({type:Boolean,json:{write:!0}})],o.prototype,"success",void 0),o=t([w("esri.rest.versionManagement.gdbVersion.support.ReconcileResult")],o);const B=o,n=new Map;async function J(e,s,p,l){n.has(e)||await b(n,e);const i=n.get(e);if(((i==null?void 0:i.serverVersion)??0)<=11.1)throw new c("reconcile:enterprise-version","versioning API requires ArcGIS Enterprise version 11.2 or higher");if(!s)throw new c("reconcile:missing-guid","guid for version is missing");const a=v(e),d=p.toJSON(),h=f(a.query,{query:g({...d,f:"json"}),...l,method:"post"});s.startsWith("{")&&(s=s.slice(1,-1));const m=`${a.path}/versions/${s}/reconcile`,{data:u}=await j(m,h);return B.fromJSON(u)}export{J as reconcile,n as serverVersionCacheMap};
