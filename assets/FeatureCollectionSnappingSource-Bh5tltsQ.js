import{O as E,k6 as F,br as h,P as m,cK as V,av as s,E as r,F as a,J as $,k7 as C}from"./index-HSyhVbHY.js";import{t as D}from"./memoize-DsJmrG76.js";import{j as A,y as I}from"./angularMeasurementUtils-Wmsz632s.js";import{a as P,o as k}from"./queryEngineUtils-Bx6jF3AC.js";import{i as d,r as G,n as v}from"./symbologySnappingCandidates-BbyV3QZ9.js";import"./geodesicUtils-e5vu0xFy.js";import"./geometry2dUtils-Ngt_647h.js";import"./quantityUtils-SoiiT3xW.js";import"./SnappingManager-DFfN6h61.js";import"./viewUtils-CzRpRjgJ.js";import"./geometryEngine-CIH2kImN.js";import"./geometryEngineBase-B06yTp3V.js";import"./hydrated-DjRHPFdM.js";import"./geodesicMeasurementUtils-HI0P2oy0.js";import"./VertexSnappingCandidate-CPtlo8s9.js";import"./PointSnappingHint-DSSkNfK8.js";let o=class extends E{get availability(){return 1}get updating(){return this.layerSource.updating}get _snappingElevationAligner(){const{view:e}=this,{layer:t}=this.layerSource,i=e!=null&&e.type==="3d";if(!i||t.type==="subtype-group")return d();const n=async(p,l)=>(await C(e.whenLayerView(t),l)).elevationAlignPointsInFeatures(p,l);return d(i,{elevationInfo:t.elevationInfo,alignPointsInFeatures:n})}get _snappingElevationFilter(){const{view:e}=this,t=e!=null&&e.type==="3d"&&this.layerSource.layer.type!=="subtype-group";return G(t)}get _symbologySnappingFetcher(){const{view:e}=this,{layer:t}=this.layerSource;return e!=null&&e.type==="3d"&&t.type!=="subtype-group"?v(this._symbologySnappingSupported,async(i,n)=>{const p=await e.whenLayerView(t);return s(n),p.queryForSymbologySnapping({candidates:i,spatialReference:e.spatialReference},n)}):v()}get _symbologySnappingSupported(){return this._layerView3D!=null&&this._layerView3D.symbologySnappingSupported}initialize(){const{view:e}=this,{layer:t}=this.layerSource;e!=null&&e.type==="3d"&&t.type!=="subtype-group"&&(e.whenLayerView(t).then(i=>this._layerView3D=i),this.addHandles([e.elevationProvider.on("elevation-change",({context:i})=>{const{elevationInfo:n}=t;F(i,n)&&this._snappingElevationAligner.notifyElevationSourceChange()}),h(()=>t.elevationInfo,()=>this._snappingElevationAligner.notifyElevationSourceChange(),m),h(()=>{var i;return this._layerView3D!=null?(i=this._layerView3D.processor)==null?void 0:i.renderer:null},()=>this._symbologySnappingFetcher.notifySymbologyChange(),m),V(()=>{var i;return(i=this._layerView3D)==null?void 0:i.layer},["edits","apply-edits","graphic-update"],()=>this._symbologySnappingFetcher.notifySymbologyChange())]))}constructor(e){super(e),this.view=null,this._layerView3D=null,this._memoizedMakeGetGroundElevation=D(k)}refresh(){}async fetchCandidates(e,t){var c;const{layer:i}=this.layerSource,n=i.source;if(!(n!=null&&n.querySnapping))return[];const p=A(i),l=I(e,((c=this.view)==null?void 0:c.type)??"2d",p),S=await n.querySnapping(l,{signal:t});s(t);const u=e.coordinateHelper.spatialReference,y=await this._snappingElevationAligner.alignCandidates(S.candidates,u,t);s(t);const g=await this._symbologySnappingFetcher.fetch(y,t);s(t);const w=g.length===0?y:[...y,...g],_=this._snappingElevationFilter.filter(l,w),f=this._memoizedMakeGetGroundElevation(this.view,u);return _.map(b=>P(b,f))}};r([a({constructOnly:!0})],o.prototype,"layerSource",void 0),r([a({constructOnly:!0})],o.prototype,"view",void 0),r([a()],o.prototype,"_snappingElevationAligner",null),r([a()],o.prototype,"_snappingElevationFilter",null),r([a()],o.prototype,"_symbologySnappingFetcher",null),r([a()],o.prototype,"_layerView3D",void 0),r([a()],o.prototype,"_symbologySnappingSupported",null),o=r([$("esri.views.interactive.snapping.featureSources.FeatureCollectionSnappingSource")],o);export{o as FeatureCollectionSnappingSource};
