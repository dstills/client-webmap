import{au as y,cV as _,av as E,ax as $,oK as D,dw as R,dM as H,qP as L,ar as h,fN as P,c_ as b,g as m,y as v,i as S,S as T,at as p,mw as V,b4 as k,cG as z,oL as G,u as c}from"./index-BhDz4nJ7.js";import{r as M,t as f}from"./ElevationProfile-D-TMkiSG.js";import{a as O}from"./HoveredPoints-aFa0vyVH.js";import{z as x,w}from"./OutlineVisualElement-DcziJDEu.js";import{e as I}from"./throttle-jjSnxk80.js";import"./memoize-DsJmrG76.js";import"./traversalUtils-DmE6QkgJ.js";import"./ElevationQuery-C3XAt9A9.js";import"./UnitSelect-DRhjBrDD.js";import"./ExtendedLineVisualElement-6Gz6zLSQ.js";import"./vec4f32-CjrfB-0a.js";import"./EngineVisualElement-g9bLWxIX.js";import"./VisualElement-BZRMP-FE.js";import"./LaserlineVisualElement-UqUOuIuA.js";let A=class{constructor(e){this._params=e,this._highlightTask=null,this._highlightHandle=null,this._visualElementHandle=null,this._settings=new x({getTheme:()=>this._params.view.effectiveTheme})}destroy(){this.remove()}remove(){this._highlightTask=y(this._highlightTask),this._highlightHandle=_(this._highlightHandle),this._visualElementHandle=_(this._visualElementHandle)}showHighlight(e){if(this.remove(),e==null||!g(e))return;const i=e.layer;this._highlightTask=E(async t=>{const n=await this._params.view.whenLayerView(i);$(t),D(n)&&(this._highlightHandle=n.highlight(e))})}showReshaping(e){if(this.remove(),e==null)return;const i=this._params.view,t=new w({view:i,geometry:g(e)?e.geometry:null,attached:!1,elevationInfo:R(e),renderOccluded:H.OccludeAndTransparentStencil,isDecoration:!0}),n=new L({graphic:e}),s=[h(()=>n.isDraped,r=>{t.isDraped=r}),n.on("changed",()=>{t.geometry=g(e)?e.geometry:null}),i.trackGraphicState(n),i.maskOccludee(e),P(t)];this._settings.visualElements.lineGraphics.outline.apply(t),t.attached=!0,this._visualElementHandle=b(s)}};function g(a){return a.geometry!=null&&a.geometry.type==="polyline"}const C=100;let d=class extends T{constructor(a){super(a),this._chartData=null,this._visualElements=[]}initialize(){const a=I(e=>{this._update(e)},C);this.addHandles([h(()=>({spatialReference:this.view.spatialReference,chartData:this._chartData}),a,p),a])}destroy(){this._destroyVisualElements()}remove(){this._destroyVisualElements()}update(a){this._chartData=a}_update(a){const{chartData:e}=a;if(e==null)return this.remove();if(!e.refined)return;const i=this._visualElements,t=e.lines.filter(o=>o.viewVisualizationEnabled),n=t.length;for(;i.length>n;)i.pop().destroy();const s=M().profileLinesStyle3D;for(;i.length<n;){const o=new w({view:this.view,elevationInfo:{mode:"absolute-height",offset:0},innerWidth:s.width-s.outlineSize,width:s.width,falloff:s.falloff,color:s.outlineColor,renderOccluded:s.renderOccluded,isDecoration:!0});i.push(o)}const r=a.spatialReference;for(let o=0;o<n;++o){const u=i[o],l=t[n-1-o];u.geometry=this._createLineGeometry(l,r),u.innerColor=V(k.toUnitRGBA(l.color))}}_createLineGeometry(a,e){const i=a.samples??[],t=i.length-1,n=[];let s=[];for(let r=0;r<=t;r++){const{x:o,y:u,z:l}=i[r];l!=null&&s.push([o,u,l]),r!==t&&l!=null||!s.length||(n.push(s),s=[])}return new z({paths:n,hasZ:!0,spatialReference:e})}_destroyVisualElements(){this._visualElements.forEach(a=>a.destroy()),this._visualElements.length=0}};m([v()],d.prototype,"view",void 0),m([v()],d.prototype,"_chartData",void 0),d=m([S("esri.widgets.ElevationProfile.support.ProfileLines3D")],d);class ie{constructor(e,i){this._handles=new G,this._inputRepresentation=new A({view:e}),this._hoveredPoints=new O({view:e}),this._profileLines=new d({view:e}),this._handles.add([h(()=>i.viewModel.hoveredPoints,t=>this._hoveredPoints.update(t),p),h(()=>{const{state:t,editable:n,highlightEnabled:s,viewModel:r}=i,o=r.input;return o&&(o.commitProperty("geometry"),o.commitProperty("layer")),{input:o,state:t,editable:n,highlightEnabled:s}},t=>this._updateInputRepresentation(t),p),h(()=>i.viewModel.chartData,t=>this._profileLines.update(t),p),h(()=>{var t;return(t=i.viewModel.input)==null?void 0:t.geometry},()=>{this._profileLines.remove()},p)])}destroy(){this._handles=c(this._handles),this._inputRepresentation=c(this._inputRepresentation),this._hoveredPoints=c(this._hoveredPoints),this._profileLines=c(this._profileLines)}_updateInputRepresentation({input:e,state:i,editable:t,highlightEnabled:n}){const s=this._inputRepresentation;if(!n)return s.remove();i===f.Selected?s.showHighlight(e):i!==f.Created||t?s.remove():s.showReshaping(e)}}export{ie as ElevationProfileView3D};
