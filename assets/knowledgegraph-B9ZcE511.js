function __vite__mapDeps(indexes) {
  if (!__vite__mapDeps.viteFileDeps) {
    __vite__mapDeps.viteFileDeps = ["assets/knowledgeGraphService-anNzXImh.js","assets/index-BhDz4nJ7.js","assets/index-CIBc8SyM.css","assets/GraphQueryStreaming-B1U0a4Xa.js"]
  }
  return indexes.map((i) => __vite__mapDeps.viteFileDeps[i])
}
import{aq as _,aj as D,bx as j,gf as J,gg as Q,gh as U,bU as b,ky as V,kz as B,bw as K,kq as I,kA as M,kB as C}from"./index-BhDz4nJ7.js";import{a as T,b as u,r as f,a0 as L,d as P,G as y,aj as O,q as z,N as W,U as k,T as X,E as G,X as q,l as Y,t as H,ak as Z,al as A,am as $}from"./arcadeUtils-cwSbtSvv.js";import{l as nn}from"./portalUtils-BJ1eX1G2.js";import{a as tn,m as en,t as an,p as rn,c as on}from"./GraphQueryStreaming-B1U0a4Xa.js";import"./number-CXkBUuK0.js";import"./hash-CcEbRgUF.js";let p=null;async function sn(n){const t=j.geometryServiceUrl??"";if(!t){J()||await Q();for(const e of n)e.container[e.indexer]=U(e.container[e.indexer],b.WGS84);return}const a=n.map(e=>e.container[e.indexer]),i=new V({geometries:a,outSpatialReference:b.WGS84}),s=await B(t,i);for(let e=0;e<s.length;e++){const r=n[e];r.container[r.indexer]=s[e]}}async function E(n,t){const a=new K({portal:n,id:t});return await a.load(),p===null&&(p=await D(()=>import("./knowledgeGraphService-anNzXImh.js").then(i=>i.k),__vite__mapDeps([0,1,2,3]))),await p.fetchKnowledgeGraph(a.url)}function v(n,t,a,i,s){if(n===null)return null;if(y(n)||G(n))return n;if(q(n)||q(n))return n.toJSDate();if(Y(n))return n.toStorageFormat();if(H(n))return n.toStorageString();if(Z(n)){const e={};for(const r of n.keys())e[r]=v(n.field(r),t,a,i,s),e[r]instanceof I&&s.push({container:e,indexer:r});return e}if(k(n)){const e=n.map(r=>v(r,t,a,i,s));for(let r=0;r<e.length;r++)e[r]instanceof I&&s.push({container:e,indexer:r});return e}if(A(n)){if(n.spatialReference.isWGS84)return n;if(n.spatialReference.isWebMercator&&t)return M(n);if(!t||!a)return n;throw new u(i,f.WrongSpatialReference,null)}}function ln(n,t){if(!n)return n;if(n.spatialReference.isWGS84&&t.spatialReference.isWebMercator)return C(n);if(n.spatialReference.equals(t.spatialReference))return n;throw new u(t,f.WrongSpatialReference,null)}function S(n,t){if(!n)return null;const a={};for(const i in n)a[i]=g(n[i],t);return a}function g(n,t){return n===null?null:k(n)?n.map(a=>g(a,t)):n instanceof en?{graphTypeName:n.typeName,id:n.id,graphType:"entity",properties:S(n.properties,t)}:n instanceof an?{graphType:"object",properties:S(n.properties,t)}:n instanceof rn?{graphTypeName:n.typeName,id:n.id,graphType:"relationship",originId:n.originId??null,destinationId:n.destinationId??null,properties:S(n.properties,t)}:n instanceof on?{graphType:"path",path:n.path?n.path.map(a=>g(a,t)):null}:A(n)?ln(n,t):y(n)||G(n)||$(n)?n:null}function mn(n){n.mode==="async"&&(n.functions.knowledgegraphbyportalitem=function(t,a){return n.standardFunctionAsync(t,a,(i,s,e)=>{var d,h;if(T(e,2,2,t,a),e[0]===null)throw new u(t,f.PortalRequired,a);if(e[0]instanceof L){const c=P(e[1]);let m=null;return m=(d=t.services)!=null&&d.portal?t.services.portal:_.getDefault(),E(nn(e[0],m),c)}if(y(e[0])===!1)throw new u(t,f.InvalidParameter,a);const r=P(e[0]);return E(((h=t.services)==null?void 0:h.portal)??_.getDefault(),r)})},n.signatures.push({name:"knowledgegraphbyportalitem",min:2,max:2}),n.functions.querygraph=function(t,a){return n.standardFunctionAsync(t,a,async(i,s,e)=>{var x;T(e,2,4,t,a);const r=e[0];if(!O(r))throw new u(t,f.InvalidParameter,a);const d=e[1];if(!y(d))throw new u(t,f.InvalidParameter,a);p===null&&(p=await D(()=>import("./knowledgeGraphService-anNzXImh.js").then(o=>o.k),__vite__mapDeps([0,1,2,3])));let h=null;const c=z(e[2],null);if(!(c instanceof W||c===null))throw new u(t,f.InvalidParameter,a);if(c){let o=[];h=v(c,!0,!1,t,o),o=o.filter(l=>!l.container[l.indexer].spatialReference.isWGS84),o.length>0&&await sn(o)}const m=new tn({openCypherQuery:d,bindParameters:h});(((x=r==null?void 0:r.serviceDefinition)==null?void 0:x.currentVersion)??11.3)>11.2&&(m.outputSpatialReference=t.spatialReference);const F=(await p.executeQueryStreaming(r,m)).resultRowsStream.getReader(),R=[];try{for(;;){const{done:o,value:l}=await F.read();if(o)break;if(k(l))for(const w of l)R.push(g(w,t));else{const w=[];for(const N of l)w.push(g(l[N],t));R.push(w)}}}catch(o){throw o}return W.convertJsonToArcade(R,X(t),!1,!0)})},n.signatures.push({name:"querygraph",min:2,max:4}))}export{mn as registerFunctions};
