import{U as i,j as h,g}from"./euclideanAreaMeasurementUtils-skkmxjk7.js";import{pJ as q,d7 as $,cS as b,pK as d,gO as o,p8 as p,di as y,bU as M}from"./index-BhDz4nJ7.js";function R({hasZ:r,spatialReference:n,rings:e},s,u=0){const a=q(n);if(a==null)return!1;const l=r?t=>t:t=>$(G,t[0],t[1],u);for(const t of e){const c=[];for(const m of t){const f=[0,0,u];a(l(m),0,f,0),c.push(f)}s.push(c)}return!0}const G=b();function S(r){const{spatialReference:n}=r;return d(n,U,j,k,r)}function U(r){return o(Math.abs(p([r],"square-meters")[0]),"square-meters")}function j(r){try{return o(Math.abs(y(r,"square-meters")),"square-meters")}catch{return null}}function k(r){const n=[];return R(r,n)?o(Math.abs(p([{type:"polygon",rings:n,spatialReference:M.WGS84}],"square-meters")[0]),"square-meters"):null}function x(r,n,e=i()){if(n==="on-the-ground"){const s=S(r);return s??h(r,e)}return g(r,e)}function O(r,n=i()){return x(r,"on-the-ground",n)}export{O as u};
