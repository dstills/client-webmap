import{b as P,cq as D,fo as q,bg as Y,fp as _,fq as tt,a9 as et,g as nt,bZ as st,H as at}from"./index-BS4ejk0L.js";function J(t){if(!t)return null;if(Y(t)&&t.wkid){const e=_[t.wkid];if(e)return e}const n=t.wkt2||t.wkt;if(n){const e=it(n);if(e)return e}return null}function it(t){const n=tt.exec(t);if(!n||n.length!==2)return null;const e=n[1].split(",");if(!e||e.length<3)return null;const l=parseFloat(e[1]),s=parseFloat(e[2]);return isNaN(l)||isNaN(s)?null:{a:l,f:s===0?0:1/s}}function E(t){const n=J(t);if(ot(n))return n;const e=n.a*(1-n.f);return Object.assign(n,{b:e,eSq:1-(e/n.a)**2,radius:(2*n.a+e)/3,densificationRatio:1e4/((2*n.a+e)/3)})}function ot(t){return t!=null&&"b"in t&&"eSq"in t&&"radius"in t}function C(t,n,e){const{a:l,eSq:s}=E(e),a=Math.sqrt(s),r=Math.sin(n[1]*q),i=l*n[0]*q;let h;return s>0?h=l*((1-s)*(r/(1-s*(r*r))-1/(2*a)*Math.log((1-a*r)/(1+a*r))))*.5:h=l*r,t[0]=i,t[1]=h,t}function O(t){return J(t)!==null}function ct(t,n="square-meters"){if(t.some(r=>!O(r.spatialReference)))throw new P("geodesic-areas:invalid-spatial-reference","the input geometries spatial reference is not supported");const e=[];for(let r=0;r<t.length;r++){const i=t[r],h=i.spatialReference,{radius:c,densificationRatio:u}=E(h),o=c*u;e.push(rt(i,o))}const l=[],s=[0,0],a=[0,0];for(let r=0;r<e.length;r++){const{rings:i,spatialReference:h}=e[r];let c=0;for(let u=0;u<i.length;u++){const o=i[u];C(s,o[0],h),C(a,o[o.length-1],h);let M=a[0]*s[1]-s[0]*a[1];for(let d=0;d<o.length-1;d++)C(s,o[d+1],h),C(a,o[d],h),M+=a[0]*s[1]-s[0]*a[1];c+=M}c=D(c,"square-meters",n),l.push(c/-2)}return l}function lt(t,n="meters"){if(!t)throw new P("geodesic-lengths:invalid-geometries","the input geometries type is not supported");if(t.some(l=>!O(l.spatialReference)))throw new P("geodesic-lengths:invalid-spatial-reference","the input geometries spatial reference is not supported");const e=[];for(let l=0;l<t.length;l++){const s=t[l],{spatialReference:a}=s,r=s.type==="polyline"?s.paths:s.rings;let i=0;for(let h=0;h<r.length;h++){const c=r[h];let u=0;for(let o=1;o<c.length;o++){const M=c[o-1][0],d=c[o][0],y=c[o-1][1],g=c[o][1];if(y!==g||M!==d){const p=new K;L(p,[M,y],[d,g],a),u+=p.distance}}i+=u}i=D(i,"meters",n),e.push(i)}return e}function rt(t,n){if(t.type!=="polyline"&&t.type!=="polygon")throw new P("geodesic-densify:invalid-geometry","the input geometry is neither polyline nor polygon");const{spatialReference:e}=t;if(!O(e))throw new P("geodesic-densify:invalid-spatial-reference","the input geometry spatial reference is not supported");const l=t.type==="polyline"?t.paths:t.rings,s=[],a=[0,0],r=new K;for(const i of l){const h=[];s.push(h),h.push([i[0][0],i[0][1]]);let c,u,o=i[0][0],M=i[0][1];for(let d=0;d<i.length-1;d++){if(c=i[d+1][0],u=i[d+1][1],o===c&&M===u)continue;const y=[o,M];L(r,[o,M],[c,u],e);const{azimuth:g,distance:p}=r,v=p/n;if(v>1){for(let m=1;m<=v-1;m++)Z(a,y,g,m*n,e),h.push(a.slice(0));Z(a,y,g,(p+Math.floor(v-1)*n)/2,e),h.push(a.slice(0))}Z(a,y,g,p,e),h.push(a.slice(0)),o=a[0],M=a[1]}}return t.type==="polyline"?new st({paths:s,spatialReference:e}):new at({rings:s,spatialReference:e})}class K{constructor(n=0,e=void 0,l=void 0){this.distance=n,this.azimuth=e,this.reverseAzimuth=l}}function Z(t,n,e,l,s){const a=n[0],r=n[1],i=a*q,h=r*q,c=(e??0)*q,{a:u,b:o,f:M}=E(s),d=Math.sin(c),y=Math.cos(c),g=(1-M)*Math.tan(h),p=1/Math.sqrt(1+g*g),v=g*p,m=Math.atan2(g,y),F=p*d,j=F*F,R=1-j,f=R*(u*u-o*o)/(o*o),k=1+f/16384*(4096+f*(f*(320-175*f)-768)),S=f/1024*(256+f*(f*(74-47*f)-128));let b,$,w,x,N=l/(o*k),z=2*Math.PI;for(;Math.abs(N-z)>1e-12;)w=Math.cos(2*m+N),b=Math.sin(N),$=Math.cos(N),x=S*b*(w+S/4*($*(2*w*w-1)-S/6*w*(4*b*b-3)*(4*w*w-3))),z=N,N=l/(o*k)+x;const A=v*b-p*$*y,G=Math.atan2(v*$+p*b*y,(1-M)*Math.sqrt(j+A*A)),U=Math.atan2(b*d,p*$-v*b*y),I=M/16*R*(4+M*(4-3*R)),H=G/q,W=(i+(U-(1-I)*M*F*(N+I*b*(w+I*$*(2*w*w-1)))))/q;return t[0]=W,t[1]=H,t}function L(t,n,e,l){const s=n[0]*q,a=n[1]*q,r=e[0]*q,i=e[1]*q,{a:h,b:c,f:u,radius:o}=E(l),M=r-s,d=Math.atan((1-u)*Math.tan(a)),y=Math.atan((1-u)*Math.tan(i)),g=Math.sin(d),p=Math.cos(d),v=Math.sin(y),m=Math.cos(y);let F,j,R,f,k,S,b,$,w,x,N=1e3,z=M;do{if(b=Math.sin(z),$=Math.cos(z),R=Math.sqrt(m*b*(m*b)+(p*v-g*m*$)*(p*v-g*m*$)),R===0)return t.distance=0,t.azimuth=void 0,t.reverseAzimuth=void 0,t;k=g*v+p*m*$,S=Math.atan2(R,k),w=p*m*b/R,j=1-w*w,f=k-2*g*v/j,isNaN(f)&&(f=0),x=u/16*j*(4+u*(4-3*j)),F=z,z=M+(1-x)*u*w*(S+x*R*(f+x*k*(2*f*f-1)))}while(Math.abs(z-F)>1e-12&&--N>0);if(N===0){const W=o,Q=Math.acos(Math.sin(a)*Math.sin(i)+Math.cos(a)*Math.cos(i)*Math.cos(r-s))*W,B=r-s,T=Math.sin(B)*Math.cos(i),V=Math.cos(a)*Math.sin(i)-Math.sin(a)*Math.cos(i)*Math.cos(B),X=Math.atan2(T,V);return t.azimuth=X/q,t.distance=Q,t.reverseAzimuth=void 0,t}const A=j*(h*h-c*c)/(c*c),G=A/1024*(256+A*(A*(74-47*A)-128)),U=c*(1+A/16384*(4096+A*(A*(320-175*A)-768)))*(S-G*R*(f+G/4*(k*(2*f*f-1)-G/6*f*(4*R*R-3)*(4*f*f-3)))),I=Math.atan2(m*Math.sin(z),p*v-g*m*Math.cos(z)),H=Math.atan2(p*Math.sin(z),p*v*Math.cos(z)-g*m);return t.azimuth=I/q,t.distance=U,t.reverseAzimuth=H/q,t}function ut(t){return O(t)?t:et(t)?nt.WGS84:null}export{ut as A,rt as R,Z as b,L as j,lt as v,O as w,ct as y,K as z};
