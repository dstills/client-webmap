import{ef as d,em as l,eg as a,eh as n,ei as r}from"./index-nBWeBKPv.js";import{k as o,d as h,t as p}from"./dom-bef18e4a-CP2TJ11y.js";import{c as m,u,d as b,I as g}from"./interactive-583e13d7-Cl8hsh9F.js";import{a as f,s as I,b as S}from"./loadable-6056dcbc-CWY718pR.js";import"./guid-617f6e1b-DQtJl1SZ.js";import"./browser-1baf23f7-zzj4YD6P.js";/*!
 * All material copyright ESRI, All Rights Reserved, unless otherwise specified.
 * See https://github.com/Esri/calcite-design-system/blob/main/LICENSE.md for details.
 * v2.7.1
 */const C=":host([disabled]){cursor:default;-webkit-user-select:none;user-select:none;opacity:var(--calcite-opacity-disabled)}:host([disabled]) *,:host([disabled]) ::slotted(*){pointer-events:none}:host{--calcite-card-group-gap:var(--calcite-size-md);display:block}.container{display:flex;flex-wrap:wrap;gap:var(--calcite-card-group-gap)}:host([disabled]) ::slotted([calcite-hydrated][disabled]),:host([disabled]) [calcite-hydrated][disabled]{opacity:1}.interaction-container{display:contents}:host([hidden]){display:none}[hidden]{display:none}",y=class{constructor(e){d(this,e),this.calciteCardGroupSelect=l(this,"calciteCardGroupSelect",6),this.items=[],this.udpateItemsOnSelectionModeChange=()=>{this.updateSlottedItems(this.slotRefEl),this.updateSelectedItems()},this.updateItemsOnSlotChange=t=>{this.updateSlottedItems(t.target),this.updateSelectedItems()},this.updateSlottedItems=t=>{this.items=t.assignedElements({flatten:!0}).filter(s=>s==null?void 0:s.matches("calcite-card"))},this.updateSelectedItems=()=>{this.items.forEach(t=>{t.selectionMode=this.selectionMode}),this.setSelectedItems(!1)},this.setSelectedItems=(t,s)=>{s&&this.items.forEach(i=>{const c=s===i;switch(this.selectionMode){case"multiple":c&&(i.selected=!i.selected);break;case"single":i.selected=c?!i.selected:!1;break;case"single-persist":i.selected=!!c;break}}),this.selectedItems=this.items.filter(i=>i.selected),t&&this.selectionMode!=="none"&&!this.disabled&&this.calciteCardGroupSelect.emit()},this.disabled=!1,this.label=void 0,this.selectionMode="none",this.selectedItems=[]}onSelectionModeChange(){this.udpateItemsOnSelectionModeChange()}connectedCallback(){m(this)}componentDidRender(){u(this)}componentDidLoad(){f(this)}disconnectedCallback(){b(this)}async componentWillLoad(){I(this)}calciteInternalCardKeyEventListener(e){if(e.composedPath().includes(this.el)){const t=this.items.filter(s=>!s.disabled);switch(e.detail.key){case"ArrowRight":o(t,e.target,"next");break;case"ArrowLeft":o(t,e.target,"previous");break;case"Home":o(t,e.target,"first");break;case"End":o(t,e.target,"last");break}}}calciteCardSelectListener(e){e.composedPath().includes(this.el)&&!e.target.selectable&&this.setSelectedItems(!0,e.target)}async setFocus(){await S(this),this.disabled||h(this.items[0])}render(){const e=this.selectionMode==="none"||this.selectionMode==="multiple"?"group":"radiogroup";return a(n,null,a(g,{disabled:this.disabled},a("div",{"aria-disabled":p(this.disabled),"aria-label":this.label,class:"container",role:e},a("slot",{onSlotchange:this.updateItemsOnSlotChange,ref:t=>this.slotRefEl=t}))))}get el(){return r(this)}static get watchers(){return{selectionMode:["onSelectionModeChange"]}}};y.style=C;export{y as calcite_card_group};
