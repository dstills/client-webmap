import{bC as m,fJ as n,P as p,aP as l,g as i,y as e,eA as d,i as c}from"./index-nBWeBKPv.js";import{S as u}from"./I3SMeshView3D-w2HN33qb.js";import{n as h}from"./LayerView3D-Ddg4V2Z4.js";import{u as g}from"./LayerView-Dpo8VUNV.js";import"./LayerElevationProvider-Gmd6Af_u.js";import"./RenderTexture-CxJNYjUS.js";import"./I3SOverrides-B-WC8sYX.js";import"./I3SNode-DdlFMF5t.js";import"./I3SUtil-DSj_F5lF.js";import"./I3SBinaryReader-9zrQ0n6f.js";import"./ReactiveSet-D87UH0_Q.js";import"./meshFeatureSet-Dl1CPWTY.js";import"./Mesh-IOtCfcoL.js";import"./External-BXxqNysM.js";import"./FeatureLayerView3D-CdpL8jdC.js";import"./FeatureLayerViewBase3D-BONmOC3T.js";import"./HeatmapDensity.glsl-CoixSVQS.js";import"./dehydratedFeatureComparison-yNW1AtFP.js";import"./queryForSymbologySnapping-B3wnHU6A.js";import"./hash-CcEbRgUF.js";import"./Graphics3DObjectStates-C-VN4jdJ.js";import"./optimizedFeatureQueryEngineAdapter-B5P_uar9.js";import"./centroid-DdLmOD72.js";import"./PooledRBush-B1lNesT9.js";import"./quickselect-BhLHWy4r.js";import"./popupUtils-BmN35jfJ.js";import"./QueryEngine-CPnR0m15.js";import"./WhereClause-B4tsjlCE.js";import"./timeSupport-rQ_0tTrz.js";import"./json-Wa8cmqdu.js";import"./utils-DU6_NK45.js";import"./utils-DaKmNdQ2.js";import"./ClassBreaksDefinition-wh1e69hS.js";import"./FeatureStore-b2Fs3ZpN.js";import"./BoundsStore-BF0zlYhz.js";import"./heatmapTextureUtils-CDx4jbqS.js";import"./projectExtentUtils-Df0bYpu3.js";import"./query-DRwR4uHa.js";import"./pbfQueryUtils-Cp4O6AeF.js";import"./pbf-9dqbeZu4.js";import"./EventedSet-BN8bEY-j.js";import"./FeatureLayerView-mjCQ-2EL.js";import"./RefreshableLayerView-B8arDm74.js";import"./SceneModification-B83DrytO.js";import"./persistable-BpBIdujX.js";import"./multiOriginJSONSupportUtils-C0wm8_Yw.js";import"./resourceExtension-M0Ef-_ik.js";import"./SceneLayerWorker-CwwGN9eB.js";import"./makeScheduleFunction-CggzEh3c.js";const y=.2;let r=class extends u(h(g)){constructor(){super(...arguments),this.type="integrated-mesh-3d",this._elevationContext="im",this._isIntegratedMesh=!0,this._supportsLabeling=!1,this._needsNormals=m("enable-feature:im-shading"),this.drapeTargetType=n.WithoutRasterImage}get i3slayer(){return this.layer}get updatingProgressValue(){var t;return((t=this._controller)==null?void 0:t.updatingProgress)??0}get lodFactor(){var t,o,a,s;return((s=(a=(o=(t=this.view)==null?void 0:t.qualitySettings)==null?void 0:o.sceneService)==null?void 0:a.integratedMesh)==null?void 0:s.lodFactor)??1}get progressiveLoadFactor(){return this.lodFactor>=1?y:1}get layerPopupEnabledAndHasTemplate(){return!1}initialize(){this._updatingHandles.add(()=>this.layer.modifications,()=>this._loadModifications(),p),this.view.basemapTerrain.overlayManager.registerDrapeTarget(this)}destroy(){this.view.basemapTerrain.overlayManager.unregisterDrapeTarget(this)}_createLayerGraphic(){const t=new l;return t.layer=this.layer,t.sourceLayer=this.layer,t}canResume(){return super.canResume()&&(!this._controller||this._controller.rootNodeVisible)}_loadModifications(){if(this.removeHandles("modifications"),this.layer.modifications==null)return void(this._modifications=[]);const t=this.layer.modifications;this.addHandles(this._updatingHandles.addOnCollectionChange(()=>t,()=>this._modifications=t.toArray(),p),"modifications")}};i([e()],r.prototype,"layer",void 0),i([e()],r.prototype,"i3slayer",null),i([e(d)],r.prototype,"updatingProgress",void 0),i([e()],r.prototype,"updatingProgressValue",null),i([e()],r.prototype,"lodFactor",null),i([e({readOnly:!0})],r.prototype,"progressiveLoadFactor",null),r=i([c("esri.views.3d.layers.SceneLayerView3D")],r);const ct=r;export{ct as default};
