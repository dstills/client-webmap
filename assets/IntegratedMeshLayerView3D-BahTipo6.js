import{bC as m,fJ as n,P as p,aP as l,g as i,y as e,eA as d,i as c}from"./index-BhDz4nJ7.js";import{S as u}from"./I3SMeshView3D-DJUZ5Vew.js";import{n as h}from"./LayerView3D-BKIbGugV.js";import{u as g}from"./LayerView-C77uL6vR.js";import"./LayerElevationProvider-bOov_xs8.js";import"./RenderTexture-Caq6jnTc.js";import"./I3SOverrides-CHF33ues.js";import"./I3SNode-DolZtN3v.js";import"./I3SUtil-NsljtA_A.js";import"./I3SBinaryReader-DKkBJHMp.js";import"./ReactiveSet-DDrZw8n9.js";import"./meshFeatureSet-BGTUh69k.js";import"./Mesh-DsVgO6Ui.js";import"./External-CAIZ3_pI.js";import"./FeatureLayerView3D-YIKBi8YK.js";import"./FeatureLayerViewBase3D-OwNxXQMU.js";import"./HeatmapDensity.glsl-x7q-49jW.js";import"./dehydratedFeatureComparison-pSIF2X6o.js";import"./queryForSymbologySnapping--4ez7C2X.js";import"./hash-CcEbRgUF.js";import"./Graphics3DObjectStates-Dk2iPRZ3.js";import"./optimizedFeatureQueryEngineAdapter-Cndhs9UI.js";import"./centroid-DdLmOD72.js";import"./PooledRBush-D633Sbwg.js";import"./quickselect-C4F3mpYw.js";import"./popupUtils-MZRTyQW5.js";import"./QueryEngine-B-uUrZ6N.js";import"./WhereClause-CVWhFH1k.js";import"./timeSupport-BllRBzVr.js";import"./json-Wa8cmqdu.js";import"./utils-DU1Zbxxt.js";import"./utils-l_nwyURO.js";import"./ClassBreaksDefinition-CnS5D5E6.js";import"./FeatureStore-Ca9AQGu3.js";import"./BoundsStore-C_sRQ4sC.js";import"./heatmapTextureUtils-F_IWNXr_.js";import"./projectExtentUtils-HbzO5SHS.js";import"./query-CGw84oGO.js";import"./pbfQueryUtils-Dark8sO6.js";import"./pbf-7bahT4Qy.js";import"./EventedSet-DDbFyFVs.js";import"./FeatureLayerView-B63fN2z9.js";import"./RefreshableLayerView-CWwfo6pL.js";import"./SceneModification-DOgn9YNz.js";import"./persistable-DaHnVUBI.js";import"./multiOriginJSONSupportUtils-C0wm8_Yw.js";import"./resourceExtension-BhndBlKT.js";import"./SceneLayerWorker-D-w9Jaic.js";import"./makeScheduleFunction-CggzEh3c.js";const y=.2;let r=class extends u(h(g)){constructor(){super(...arguments),this.type="integrated-mesh-3d",this._elevationContext="im",this._isIntegratedMesh=!0,this._supportsLabeling=!1,this._needsNormals=m("enable-feature:im-shading"),this.drapeTargetType=n.WithoutRasterImage}get i3slayer(){return this.layer}get updatingProgressValue(){var t;return((t=this._controller)==null?void 0:t.updatingProgress)??0}get lodFactor(){var t,o,a,s;return((s=(a=(o=(t=this.view)==null?void 0:t.qualitySettings)==null?void 0:o.sceneService)==null?void 0:a.integratedMesh)==null?void 0:s.lodFactor)??1}get progressiveLoadFactor(){return this.lodFactor>=1?y:1}get layerPopupEnabledAndHasTemplate(){return!1}initialize(){this._updatingHandles.add(()=>this.layer.modifications,()=>this._loadModifications(),p),this.view.basemapTerrain.overlayManager.registerDrapeTarget(this)}destroy(){this.view.basemapTerrain.overlayManager.unregisterDrapeTarget(this)}_createLayerGraphic(){const t=new l;return t.layer=this.layer,t.sourceLayer=this.layer,t}canResume(){return super.canResume()&&(!this._controller||this._controller.rootNodeVisible)}_loadModifications(){if(this.removeHandles("modifications"),this.layer.modifications==null)return void(this._modifications=[]);const t=this.layer.modifications;this.addHandles(this._updatingHandles.addOnCollectionChange(()=>t,()=>this._modifications=t.toArray(),p),"modifications")}};i([e()],r.prototype,"layer",void 0),i([e()],r.prototype,"i3slayer",null),i([e(d)],r.prototype,"updatingProgress",void 0),i([e()],r.prototype,"updatingProgressValue",null),i([e()],r.prototype,"lodFactor",null),i([e({readOnly:!0})],r.prototype,"progressiveLoadFactor",null),r=i([c("esri.views.3d.layers.SceneLayerView3D")],r);const ct=r;export{ct as default};
