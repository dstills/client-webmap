import{em as p,fA as l,el as m,av as d,j9 as u,o7 as g,br as n,by as a,M as r}from"./index-D2dWKXoe.js";import{t as _}from"./ElevationProfile-BJ3pnGh9.js";import{a as v}from"./HoveredPoints-eIlkYbJu.js";import"./memoize-DsJmrG76.js";import"./defaultUnit-Dotgvvuw.js";import"./getDefaultUnitForView-C9_kBQfj.js";import"./throttle-jjSnxk80.js";import"./geodesicUtils-0BUrW_mO.js";import"./traversalUtils-DmE6QkgJ.js";import"./ElevationQuery-BvtpUEcq.js";import"./GraphicsLayer-CYXumPqX.js";import"./SketchViewModel-B9IvZBHr.js";import"./layerUtils-BS1Di3Pm.js";import"./angularMeasurementUtils-D3zeviIM.js";import"./geometry2dUtils-14ZJrqSH.js";import"./quantityUtils-D4B7S4Ay.js";import"./SketchLabelOptions-DwkEUuft.js";import"./SnappingManager-BCnKLkaT.js";import"./viewUtils-jOSSHAZP.js";import"./geometryEngine-Bmlaqucx.js";import"./geometryEngineBase-C1UOpB5A.js";import"./hydrated-CRFlPVgK.js";import"./geodesicMeasurementUtils-DzAxKO3X.js";import"./unitFormatUtils-BobBl4gB.js";import"./UnitSelect-wG9EIHuK.js";import"./AnchorElementViewModel-P6g7Hd0r.js";class c{constructor(t){this._params=t,this._highlightTask=null,this._highlightHandle=null}destroy(){this.remove()}remove(){this._highlightTask=p(this._highlightTask),this._highlightHandle=l(this._highlightHandle)}update(t){if(this.remove(),t==null||!w(t))return;const e=t.layer;this._highlightTask=m(async i=>{const h=await this._params.view.whenLayerView(e);d(i);const o=u(h)?h:null;o&&(this._highlightHandle=o.highlight(t))})}}function w(s){return s.geometry!=null&&s.geometry.type==="polyline"}class K{constructor(t,e){this._handles=new g,this._inputRepresentation=new c({view:t}),this._hoveredPoints=new v({view:t}),this._handles.add([n(()=>e.viewModel.hoveredPoints,i=>this._hoveredPoints.update(i),a),n(()=>{const{state:i,highlightEnabled:h,viewModel:o}=e;return{input:o.input,state:i,highlightEnabled:h}},i=>this._updateInputRepresentation(i),a)])}destroy(){this._handles=r(this._handles),this._inputRepresentation=r(this._inputRepresentation),this._hoveredPoints=r(this._hoveredPoints)}_updateInputRepresentation({input:t,state:e,highlightEnabled:i}){e===_.Selected&&i?this._inputRepresentation.update(t):this._inputRepresentation.remove()}}export{K as ElevationProfileView2D};
