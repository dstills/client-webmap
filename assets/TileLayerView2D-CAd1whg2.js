import{cE as w,cF as y,cG as I,cH as V,am as H,G as v,bq as o,cI as m,aU as T,E as n,F as g,J as q}from"./index-HSyhVbHY.js";import"./Container-Cn_CYdK9.js";import"./WGLContainer-kQwg4O2n.js";import"./vec4f32-CjrfB-0a.js";import"./LabelMetric-iV-VnuNv.js";import"./MagnifierPrograms-CGEgdGcz.js";import"./pbf-4nNmhWmO.js";import"./FeatureCommandQueue-BG5ePhbP.js";import{$ as U}from"./GraphicsView2D-CqKdBFV5.js";import{r as b,o as f,n as d}from"./imageUtils-DhJkpgRC.js";import{m as S}from"./LayerView2D-CIjABtoB.js";import{h as C}from"./HighlightGraphicContainer-7Tg821e8.js";import{u as Q}from"./LayerView-D_2WUzSy.js";import{i as F}from"./RefreshableLayerView-nhECpckg.js";import{S as G,U as L}from"./MapServiceLayerViewHelper-V_e98wOB.js";import{r as P}from"./drapedUtils-CEFFqJhQ.js";import"./highlightReasons-CzmGE6R-.js";import"./WGLBrushVTLSymbol-LFWcLoh2.js";import"./ShaderCompiler-G2XYGDs6.js";import"./ProgramTemplate-CnqiJKT8.js";import"./CircularArray-DfLrgW_-.js";import"./AttributeStore-DYK9huDG.js";import"./UpdateTracking2D-mV1y-24T.js";import"./TurboLine-qRo5QacU.js";import"./constants-D5zmR9t2.js";import"./TimeOnly-DLFwqMZ9.js";import"./centroid-DdLmOD72.js";import"./timeSupport-qQlhJqvf.js";import"./json-Wa8cmqdu.js";import"./heatmapTextureUtils-STrnrcwY.js";import"./normalizeUtilsSync-DT1YOJ8M.js";import"./Bitmap-B9vIHYXC.js";import"./TileContainer-orB4ikzY.js";import"./ClipRect-B3UDYklG.js";import"./AGraphicContainer-B3g6RoTk.js";import"./TechniqueInstance-Abjygs2v.js";import"./popupUtils-2vg8rKMo.js";const k=[0,0];let a=class extends F(b(S(Q))){constructor(){super(...arguments),this._fetchQueue=null,this._highlightGraphics=new w,this._highlightView=null,this._popupHighlightHelper=null,this._tileStrategy=null,this.layer=null}get resampling(){return!("resampling"in this.layer)||this.layer.resampling!==!1}get tilemapCache(){return"tilemapCache"in this.layer?this.layer.tilemapCache:null}update(e){var t;this._fetchQueue.pause(),this._fetchQueue.state=e.state,this._tileStrategy.update(e),this._fetchQueue.resume(),(t=this._highlightView)==null||t.processUpdate(e)}attach(){const e="tileServers"in this.layer?this.layer.tileServers:null,t=this.tilemapCache;if(this._tileInfoView=new y(this.layer.tileInfo,this.layer.fullExtent,t==null?void 0:t.effectiveMinLOD,t==null?void 0:t.effectiveMaxLOD),this._fetchQueue=new I({tileInfoView:this._tileInfoView,concurrency:e&&10*e.length||10,process:(i,h)=>this.fetchTile(i,h)}),this._tileStrategy=new V({cachePolicy:"keep",resampling:this.resampling,acquireTile:i=>this.acquireTile(i),releaseTile:i=>this.releaseTile(i),tileInfoView:this._tileInfoView}),G(this,this.layer)){const i=this._highlightView=new U({view:this.view,graphics:this._highlightGraphics,requestUpdateCallback:()=>this.requestUpdate(),container:new C(this.view.featuresTilingScheme),defaultPointSymbolEnabled:!1});this.container.addChild(this._highlightView.container),this._popupHighlightHelper=new L({createFetchPopupFeaturesQueryGeometry:(h,s)=>P(h,s,this.view),highlightGraphics:this._highlightGraphics,highlightGraphicUpdated:(h,s)=>{i.graphicUpdateHandler({graphic:h,property:s})},layerView:this,updatingHandles:this._updatingHandles})}this.requestUpdate(),this.addAttachHandles(this._updatingHandles.add(()=>this.resampling,()=>{this.doRefresh()})),super.attach()}detach(){var e,t;super.detach(),this._tileStrategy.destroy(),this._fetchQueue.clear(),this.container.removeAllChildren(),(e=this._popupHighlightHelper)==null||e.destroy(),(t=this._highlightView)==null||t.destroy(),this._fetchQueue=this._tileStrategy=this._tileInfoView=this._popupHighlightHelper=null}async fetchPopupFeaturesAtLocation(e,t){return this._popupHighlightHelper?this._popupHighlightHelper.fetchPopupFeaturesAtLocation(e,t):[]}highlight(e){return this._popupHighlightHelper?this._popupHighlightHelper.highlight(e):H()}moveStart(){this.requestUpdate()}viewChange(){this.requestUpdate()}moveEnd(){this.requestUpdate()}supportsSpatialReference(e){var t;return v((t=this.layer.tileInfo)==null?void 0:t.spatialReference,e)}async doRefresh(){if(this.attached){if(this.suspended)return this._tileStrategy.clear(),void this.requestUpdate();this._fetchQueue.reset(),this._tileStrategy.refresh(e=>this._updatingHandles.addPromise(this._enqueueTileFetch(e)))}}acquireTile(e){const t=this._bitmapView.createTile(e),i=t.bitmap;return[i.x,i.y]=this._tileInfoView.getTileCoords(k,t.key),i.resolution=this._tileInfoView.getTileResolution(t.key),[i.width,i.height]=this._tileInfoView.tileInfo.size,this._updatingHandles.addPromise(this._enqueueTileFetch(t)),this._bitmapView.addChild(t),this.requestUpdate(),t}releaseTile(e){this._fetchQueue.abort(e.key.id),this._bitmapView.removeChild(e),e.once("detach",()=>e.destroy()),this.requestUpdate()}async fetchTile(e,t={}){const i=this.tilemapCache,{signal:h,resamplingLevel:s=0}=t;if(!i)try{return await this._fetchImage(e,h)}catch(r){if(!o(r)&&!this.resampling)return f(this._tileInfoView.tileInfo.size);if(s<3){const c=this._tileInfoView.getTileParentId(e.id);if(c){const u=new m(c),_=await this.fetchTile(u,{...t,resamplingLevel:s+1});return d(this._tileInfoView,_,u,e)}}throw r}const l=new m(0,0,0,0);let p;try{if(await i.fetchAvailabilityUpsample(e.level,e.row,e.col,l,{signal:h}),l.level!==e.level&&!this.resampling)return f(this._tileInfoView.tileInfo.size);p=await this._fetchImage(l,h)}catch(r){if(o(r))throw r;p=await this._fetchImage(e,h)}return this.resampling?d(this._tileInfoView,p,l,e):p}async _enqueueTileFetch(e){if(!this._fetchQueue.has(e.key.id)){try{const t=await this._fetchQueue.push(e.key);e.bitmap.source=t,e.bitmap.width=this._tileInfoView.tileInfo.size[0],e.bitmap.height=this._tileInfoView.tileInfo.size[1],e.once("attach",()=>this.requestUpdate())}catch(t){o(t)||T.getLogger(this).error(t)}this.requestUpdate()}}async _fetchImage(e,t){return this.layer.fetchImageBitmapTile(e.level,e.row,e.col,{signal:t})}};n([g()],a.prototype,"resampling",null),n([g()],a.prototype,"tilemapCache",null),a=n([q("esri.views.2d.layers.TileLayerView2D")],a);const ye=a;export{ye as default};
