import{j as P,bU as $,cS as l,d7 as S,d8 as b,d9 as W,da as j,db as k,dc as x,dd as p,de as q,df as m,dg as G,dh as d,di as z,dj as h,dk as w,dl as E,dm as T,dn as M}from"./index-BhDz4nJ7.js";function y(t,n){const e=T(n);S(e,0,0,0);for(let r=0;r<t.length;++r)b(e,e,t[r]);W(e,e,1/t.length);let a=0;for(let r=0;r<t.length;++r)a=Math.max(a,j(e,t[r]));n[3]=Math.sqrt(a)}function C(t,n){if(t.length<3)throw new Error("need at least 3 points to fit a plane");k(t[0],t[1],t[2],n)}function L(t,n){return x(t,n)+t[3]}function R(t,n,e){return p(t,i,e)&&p(n,o,e)?q(i,o):0}function Z(t,n){if(!m(t,i)||!m(n,o))return 0;const e=new M;return G(e,[i[0],i[1]],[o[0],o[1]],$.WGS84),e.distance}function _(t,n,e){const a=new M;return G(a,[t[0],t[1]],[n[0],n[1]],e??$.WGS84),a.distance}function A(t,n,e,a){const r=U;return d(t,a,i)&&d(n,a,o)&&d(e,a,g)?(r.setPoint(0,0,i),r.setPoint(0,1,o),r.setPoint(0,2,g),Math.abs(z(r,"square-meters"))):0}function B(t,n=null,e=!0){const r=(f,u)=>{if(u[0]===0&&u[1]===0&&u[2]===0)return!1;for(let c=0;c<f.length;++c)if(x(u,f[c])<-1e-6)return!1;return!0};if(t.length===0)return!1;if(t.length===1)return n&&h(n,t[0]),!0;S(s,0,0,0);for(let f=0;f<t.length;++f)b(s,s,t[f]);if(w(s,s),r(t,s))return n&&h(n,s),!0;if(!e)return!1;for(let f=0;f<t.length;++f)for(let u=0;u<t.length;++u)if(f!==u&&(E(s,t[f],t[u]),w(s,s),r(t,s)))return n&&h(n,s),!0;return!1}function D(t){return t.pointerType!=="mouse"||t.button===0}const i=l(),o=l(),g=l(),U=new P({rings:[[i,o,g]],spatialReference:$.WGS84}),s=l();export{L as G,_ as L,y as S,A as T,R as W,Z as d,B as k,D as q,C as w};
