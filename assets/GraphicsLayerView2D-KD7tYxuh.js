import{u as p,aP as g,aO as m,v as n,bl as a,g as o,y as l,i as c}from"./index-nBWeBKPv.js";import{t as d}from"./highlightReasons-BreL7upH.js";import{m as u}from"./LayerView2D-BloiS6d1.js";import{t as w}from"./GraphicContainer-Bl1g66vH.js";import{$ as y}from"./GraphicsView2D-0TEF5AKb.js";import{t as V}from"./HighlightCounter-Cqsao5gu.js";import{u as f}from"./LayerView-Dpo8VUNV.js";import"./Tile-CQ6TlwHd.js";import"./quickselect-BhLHWy4r.js";import"./Container-CTQo6kEb.js";import"./ClipRect-CL_RLv1L.js";import"./AGraphicContainer-Dguq8bB7.js";import"./TechniqueInstance-iSLO03bC.js";import"./UpdateTracking2D-CD1onhf0.js";import"./TurboLine-CoGYQY3E.js";import"./LabelMetric-DofoYXTH.js";import"./constants-D5zmR9t2.js";import"./TileContainer-CHFG_M5g.js";import"./WGLContainer-CosurzxA.js";import"./WGLBrushVTLSymbol-CgE_QQ-Q.js";import"./vec4f32-CjrfB-0a.js";import"./ShaderCompiler-G2XYGDs6.js";import"./ProgramTemplate-B9wT6rfn.js";import"./FeatureCommandQueue-sA8oVCV4.js";import"./heatmapTextureUtils-CDx4jbqS.js";import"./AttributeStore-DOjVp8d7.js";import"./centroid-DdLmOD72.js";import"./timeSupport-rQ_0tTrz.js";import"./json-Wa8cmqdu.js";import"./normalizeUtilsSync-Dv3yGzcd.js";let s=class extends u(f){constructor(){super(...arguments),this._highlightCounter=new V}attach(){this.graphicsView=new y({requestUpdateCallback:()=>this.requestUpdate(),view:this.view,graphics:this.layer.graphics,container:new w(this.view.featuresTilingScheme),layerId:this.layer.id}),this.container.addChild(this.graphicsView.container),this.addAttachHandles(this.layer.on("graphic-update",this.graphicsView.graphicUpdateHandler)),this._updateHighlight()}detach(){this.container.removeAllChildren(),this.graphicsView=p(this.graphicsView)}async hitTest(i){return this.graphicsView?this.graphicsView.hitTest(i).map(t=>({type:"graphic",graphic:t,mapPoint:i,layer:this.layer})):null}queryGraphics(){return Promise.resolve(this.graphicsView.graphics)}update(i){this.graphicsView.processUpdate(i)}moveStart(){}viewChange(){this.graphicsView.viewChange()}moveEnd(){}isUpdating(){return!this.graphicsView||this.graphicsView.updating}highlight(i,t="highlight"){let e;typeof i=="number"?e=[i]:i instanceof g?e=[i.uid]:Array.isArray(i)&&i.length>0?e=typeof i[0]=="number"?i:i.map(h=>h&&h.uid):m.isCollection(i)&&i.length>0&&(e=i.map(h=>h&&h.uid).toArray());const r=e==null?void 0:e.filter(n);return r!=null&&r.length?(this._addHighlight(r,t),a(()=>this._removeHighlight(r,t))):a()}_addHighlight(i,t){this._highlightCounter.addReason(i,t),this._updateHighlight()}_removeHighlight(i,t){this._highlightCounter.deleteReason(i,t),this._updateHighlight()}_updateHighlight(){var t;const i=[];for(const e of this._highlightCounter.ids()){const r=this._highlightCounter.getHighestReason(e),h=d(r);i.push({objectId:e,highlightFlags:h})}(t=this.graphicsView)==null||t.setHighlight(i)}};o([l()],s.prototype,"graphicsView",void 0),s=o([c("esri.views.2d.layers.GraphicsLayerView2D")],s);const W=s;export{W as default};
