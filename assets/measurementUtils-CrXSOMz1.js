import{H as S,g as p,eN as l,eM as M,eV as W,eW as j,eX as q,eY as b,eZ as x,e_ as m,e$ as k,f0 as w,f1 as g,f2 as h,eL as d,eK as z,f3 as E}from"./index-BS4ejk0L.js";import{geodesicArea as L}from"./geometryEngine-C5wCr2lg.js";import{j as G,z as P}from"./geodesicUtils-CnTg9Ebr.js";function y(t,e){const n=E(e);M(n,0,0,0);for(let r=0;r<t.length;++r)W(n,n,t[r]);j(n,n,1/t.length);let a=0;for(let r=0;r<t.length;++r)a=Math.max(a,q(n,t[r]));e[3]=Math.sqrt(a)}function A(t,e){if(t.length<3)throw new Error("need at least 3 points to fit a plane");b(t[0],t[1],t[2],e)}function C(t,e){return x(t,e)+t[3]}function H(t,e,n){return m(t,i,n)&&m(e,u,n)?k(i,u):0}function K(t,e){if(!w(t,i)||!w(e,u))return 0;const n=new P;return G(n,[i[0],i[1]],[u[0],u[1]],p.WGS84),n.distance}function N(t,e,n){const a=new P;return G(a,[t[0],t[1]],[e[0],e[1]],n??p.WGS84),a.distance}function R(t,e,n,a){const r=T;return g(t,a,i)&&g(e,a,u)&&g(n,a,$)?(r.setPoint(0,0,i),r.setPoint(0,1,u),r.setPoint(0,2,$),Math.abs(L(r,"square-meters"))):0}function U(t,e=null,n=!0){const r=(f,o)=>{if(o[0]===0&&o[1]===0&&o[2]===0)return!1;for(let c=0;c<f.length;++c)if(x(o,f[c])<-1e-6)return!1;return!0};if(t.length===0)return!1;if(t.length===1)return e&&h(e,t[0]),!0;M(s,0,0,0);for(let f=0;f<t.length;++f)W(s,s,t[f]);if(d(s,s),r(t,s))return e&&h(e,s),!0;if(!n)return!1;for(let f=0;f<t.length;++f)for(let o=0;o<t.length;++o)if(f!==o&&(z(s,t[f],t[o]),d(s,s),r(t,s)))return e&&h(e,s),!0;return!1}function V(t){return t.pointerType!=="mouse"||t.button===0}const i=l(),u=l(),$=l(),T=new S({rings:[[i,u,$]],spatialReference:p.WGS84}),s=l();export{C as G,N as L,y as S,R as T,H as W,K as d,U as k,V as q,A as w};
