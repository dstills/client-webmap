import{d4 as l,kE as $,eK as k,fM as P,kF as S,eL as T}from"./index-D2dWKXoe.js";function H(e,s){const a=e==null?void 0:e.geometry;if(!e||(a==null?void 0:a.type)!=="mesh"||!s)return;const{renderCoordsHelper:c,elevationProvider:x}=s,{camera:d}=s.state,{extent:t}=a,{center:h,spatialReference:r}=t,z=l(r),n=$(r),v=l(c.spatialReference),w=t.width*z,y=t.height*n,p=(t.zmax??0)*n,u=p-(t.zmin??0)*n,C=Math.max(w,y,u)/v,{x:i,y:m}=h,f=h.z??0;k(o,i,m,f),c.toRenderCoords(o,r,o);const g=C/d.computeScreenPixelSizeAt(o);if(g>d.width*A)return"meshTooClose";if(g<b)return"meshTooFar";const M=P(e),{absoluteZ:R}=S(i,m,p,r,s,M);return R<(x.getElevation(i,m,f,r,"ground")??0)*n+u*E?"meshUnderground":"mesh"}const b=20,A=1,E=.1,o=T();export{H as getDrawMeshHelpMessage};
