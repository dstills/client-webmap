import{eo as p,fC as l,en as m,av as d,j9 as u,o7 as g,bt as n,bA as a,M as r}from"./index-BS4ejk0L.js";import{t as _}from"./ElevationProfile-CSF1pXqm.js";import{a as v}from"./HoveredPoints-CVPW8Iz_.js";import"./memoize-DsJmrG76.js";import"./defaultUnit-DgRQNz8q.js";import"./getDefaultUnitForView-n2jWYNVB.js";import"./throttle-jjSnxk80.js";import"./geodesicUtils-CnTg9Ebr.js";import"./traversalUtils-DmE6QkgJ.js";import"./ElevationQuery-CXAlXVBS.js";import"./GraphicsLayer-BXYC2K90.js";import"./SketchViewModel-C4y163xs.js";import"./layerUtils-BS1Di3Pm.js";import"./angularMeasurementUtils-K0KXcSa5.js";import"./geometry2dUtils-qdpAqfFv.js";import"./quantityUtils-b7cV58jp.js";import"./SketchLabelOptions-SjSNo4Z0.js";import"./SnappingManager-qaiEOTfy.js";import"./viewUtils-CrPzLSYw.js";import"./geometryEngine-C5wCr2lg.js";import"./geometryEngineBase-JM13Zf35.js";import"./hydrated-Brlnp7w9.js";import"./geodesicMeasurementUtils-C9DYvYv0.js";import"./unitFormatUtils-jNvliv8R.js";import"./UnitSelect-C-FGb5NO.js";import"./AnchorElementViewModel-Ce6oiPjx.js";class c{constructor(t){this._params=t,this._highlightTask=null,this._highlightHandle=null}destroy(){this.remove()}remove(){this._highlightTask=p(this._highlightTask),this._highlightHandle=l(this._highlightHandle)}update(t){if(this.remove(),t==null||!w(t))return;const e=t.layer;this._highlightTask=m(async i=>{const h=await this._params.view.whenLayerView(e);d(i);const o=u(h)?h:null;o&&(this._highlightHandle=o.highlight(t))})}}function w(s){return s.geometry!=null&&s.geometry.type==="polyline"}class K{constructor(t,e){this._handles=new g,this._inputRepresentation=new c({view:t}),this._hoveredPoints=new v({view:t}),this._handles.add([n(()=>e.viewModel.hoveredPoints,i=>this._hoveredPoints.update(i),a),n(()=>{const{state:i,highlightEnabled:h,viewModel:o}=e;return{input:o.input,state:i,highlightEnabled:h}},i=>this._updateInputRepresentation(i),a)])}destroy(){this._handles=r(this._handles),this._inputRepresentation=r(this._inputRepresentation),this._hoveredPoints=r(this._hoveredPoints)}_updateInputRepresentation({input:t,state:e,highlightEnabled:i}){e===_.Selected&&i?this._inputRepresentation.update(t):this._inputRepresentation.remove()}}export{K as ElevationProfileView2D};
